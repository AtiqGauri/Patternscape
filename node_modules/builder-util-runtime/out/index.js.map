{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AACO,MAAM,+BAA+B,GAAG,eAAxC,C,CACP;;;AACO,MAAM,6BAA6B,GAAG,YAAtC;;;AAED,SAAU,OAAV,CAAqB,CAArB,EAAuD;AAC3D,MAAI,CAAC,IAAI,IAAT,EAAe;AACb,WAAO,EAAP;AACD,GAFD,MAGK,IAAI,KAAK,CAAC,OAAN,CAAc,CAAd,CAAJ,EAAsB;AACzB,WAAO,CAAP;AACD,GAFI,MAGA;AACH,WAAO,CAAC,CAAD,CAAP;AACD;AACF;;AAEK,SAAU,QAAV,CAAmB,OAAnB,EAAoC,IAApC,EAAgD;AACpD,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,OAAV,CAAd;AACC,EAAA,KAA+B,CAAC,IAAhC,GAAuC,IAAvC;AACD,SAAO,KAAP;AACD,C","sourcesContent":["export { CancellationToken, CancellationError } from \"./CancellationToken\"\nexport { HttpError, createHttpError, HttpExecutor, DownloadOptions, DigestTransform, RequestHeaders, safeGetHeader, configureRequestOptions, configureRequestOptionsFromUrl, safeStringifyJson, parseJson, configureRequestUrl } from \"./httpExecutor\"\nexport { BintrayOptions, GenericServerOptions, GithubOptions, PublishConfiguration, S3Options, SpacesOptions, BaseS3Options, getS3LikeProviderBaseUrl, Publish, githubUrl, PublishProvider, AllPublishOptions } from \"./publishOptions\"\nexport { UpdateInfo, UpdateFileInfo, WindowsUpdateInfo, BlockMapDataHolder, PackageFileInfo, ReleaseNoteInfo } from \"./updateInfo\"\nexport { parseDn } from \"./rfc2253Parser\"\nexport { UUID } from \"./uuid\"\nexport { ProgressCallbackTransform, ProgressInfo } from \"./ProgressCallbackTransform\"\nexport { parseXml, XElement } from \"./xml\"\nexport { BlockMap } from \"./blockMapApi\"\n\n// nsis\nexport const CURRENT_APP_INSTALLER_FILE_NAME = \"installer.exe\"\n// nsis-web\nexport const CURRENT_APP_PACKAGE_FILE_NAME = \"package.7z\"\n\nexport function asArray<T>(v: null | undefined | T | Array<T>): Array<T> {\n  if (v == null) {\n    return []\n  }\n  else if (Array.isArray(v)) {\n    return v\n  }\n  else {\n    return [v]\n  }\n}\n\nexport function newError(message: string, code: string) {\n  const error = new Error(message);\n  (error as NodeJS.ErrnoException).code = code\n  return error\n}"],"sourceRoot":""}
