{"version":3,"sources":["../src/dmg.ts"],"names":[],"mappings":"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","sourcesContent":["import { DmgOptions, Target } from \"app-builder-lib\"\nimport { findIdentity, isSignAllowed } from \"app-builder-lib/out/codeSign/macCodeSign\"\nimport MacPackager from \"app-builder-lib/out/macPackager\"\nimport { createBlockmap } from \"app-builder-lib/out/targets/differentialUpdateInfoBuilder\"\nimport { executeAppBuilderAsJson } from \"app-builder-lib/out/util/appBuilder\"\nimport { Arch, AsyncTaskManager, exec, InvalidConfigurationError, isEmptyOrSpaces, log, spawn } from \"builder-util\"\nimport { CancellationToken } from \"builder-util-runtime\"\nimport { copyDir, copyFile, exists, statOrNull } from \"builder-util/out/fs\"\nimport { stat } from \"fs-extra\"\nimport * as path from \"path\"\nimport sanitizeFileName from \"sanitize-filename\"\nimport { addLicenseToDmg } from \"./dmgLicense\"\nimport { attachAndExecute, computeBackground, detach, getDmgVendorPath, transformBackgroundFileIfNeed } from \"./dmgUtil\"\n\nexport class DmgTarget extends Target {\n  readonly options: DmgOptions = this.packager.config.dmg || Object.create(null)\n\n  constructor(private readonly packager: MacPackager, readonly outDir: string) {\n    super(\"dmg\")\n  }\n\n  async build(appPath: string, arch: Arch) {\n    const packager = this.packager\n    // tslint:disable-next-line:no-invalid-template-strings\n    const artifactName = packager.expandArtifactNamePattern(packager.config.dmg, \"dmg\", null, \"${productName}-\" + (packager.platformSpecificBuildOptions.bundleShortVersion || \"${version}\") + \".${ext}\")\n    const artifactPath = path.join(this.outDir, artifactName)\n    await packager.info.callArtifactBuildStarted({\n      targetPresentableName: \"DMG\",\n      file: artifactPath,\n      arch,\n    })\n\n    const volumeName = sanitizeFileName(this.computeVolumeName(this.options.title))\n\n    const tempDmg = await createStageDmg(await packager.getTempFile(\".dmg\"), appPath, volumeName)\n\n    const specification = await this.computeDmgOptions()\n    // https://github.com/electron-userland/electron-builder/issues/2115\n    const backgroundFile = specification.background == null ? null : await transformBackgroundFileIfNeed(specification.background, packager.info.tempDirManager)\n    const finalSize = await computeAssetSize(packager.info.cancellationToken, tempDmg, specification, backgroundFile)\n    await exec(\"hdiutil\", [\"resize\", \"-size\", finalSize.toString(), tempDmg])\n\n    const volumePath = path.join(\"/Volumes\", volumeName)\n    if (await exists(volumePath)) {\n      log.debug({volumePath}, \"unmounting previous disk image\")\n      await detach(volumePath)\n    }\n\n    if (!await attachAndExecute(tempDmg, true, () => customizeDmg(volumePath, specification, packager, backgroundFile))) {\n      return\n    }\n\n    // dmg file must not exist otherwise hdiutil failed (https://github.com/electron-userland/electron-builder/issues/1308#issuecomment-282847594), so, -ov must be specified\n    const args = [\"convert\", tempDmg, \"-ov\", \"-format\", specification.format!!, \"-o\", artifactPath]\n    if (specification.format === \"UDZO\") {\n      args.push(\"-imagekey\", `zlib-level=${process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL || \"9\"}`)\n    }\n    await spawn(\"hdiutil\", addLogLevel(args))\n    if (this.options.internetEnabled) {\n      await exec(\"hdiutil\", addLogLevel([\"internet-enable\"]).concat(artifactPath))\n    }\n\n    const licenseData = await addLicenseToDmg(packager, artifactPath)\n    if (packager.packagerOptions.effectiveOptionComputed != null) {\n      await packager.packagerOptions.effectiveOptionComputed({licenseData})\n    }\n\n    if (this.options.sign === true) {\n      await this.signDmg(artifactPath)\n    }\n\n    const safeArtifactName = packager.computeSafeArtifactName(artifactName, \"dmg\")\n    const updateInfo = this.options.writeUpdateInfo === false ? null : await createBlockmap(artifactPath, this, packager, safeArtifactName)\n    await packager.info.callArtifactBuildCompleted({\n      file: artifactPath,\n      safeArtifactName,\n      target: this,\n      arch,\n      packager,\n      isWriteUpdateInfo: updateInfo != null,\n      updateInfo,\n    })\n  }\n\n  private async signDmg(artifactPath: string) {\n    if (!isSignAllowed(false)) {\n      return\n    }\n\n    const packager = this.packager\n    const qualifier = packager.platformSpecificBuildOptions.identity\n    // explicitly disabled if set to null\n    if (qualifier === null) {\n      // macPackager already somehow handle this situation, so, here just return\n      return\n    }\n\n    const keychainFile = (await packager.codeSigningInfo.value).keychainFile\n    const certificateType = \"Developer ID Application\"\n    let identity = await findIdentity(certificateType, qualifier, keychainFile)\n    if (identity == null) {\n      identity = await findIdentity(\"Mac Developer\", qualifier, keychainFile)\n      if (identity == null) {\n        return\n      }\n    }\n\n    const args = [\"--sign\", identity.hash]\n    if (keychainFile != null) {\n      args.push(\"--keychain\", keychainFile)\n    }\n    args.push(artifactPath)\n    await exec(\"codesign\", args)\n  }\n\n  computeVolumeName(custom?: string | null): string {\n    const appInfo = this.packager.appInfo\n    const shortVersion = this.packager.platformSpecificBuildOptions.bundleShortVersion || appInfo.version\n\n    if (custom == null) {\n      return `${appInfo.productFilename} ${shortVersion}`\n    }\n\n    return custom\n      .replace(/\\${shortVersion}/g, shortVersion)\n      .replace(/\\${version}/g, appInfo.version)\n      .replace(/\\${name}/g, appInfo.name)\n      .replace(/\\${productName}/g, appInfo.productName)\n  }\n\n  // public to test\n  async computeDmgOptions(): Promise<DmgOptions> {\n    const packager = this.packager\n    const specification: DmgOptions = {...this.options}\n    if (specification.icon == null && specification.icon !== null) {\n      specification.icon = await packager.getIconPath()\n    }\n\n    if (specification.icon != null && isEmptyOrSpaces(specification.icon)) {\n      throw new InvalidConfigurationError(\"dmg.icon cannot be specified as empty string\")\n    }\n\n    const background = specification.background\n    if (specification.backgroundColor != null) {\n      if (background != null) {\n        throw new InvalidConfigurationError(\"Both dmg.backgroundColor and dmg.background are specified — please set the only one\")\n      }\n    }\n    else if (background == null) {\n      specification.background = await computeBackground(packager)\n    }\n    else {\n      specification.background = path.resolve(packager.info.projectDir, background)\n    }\n\n    if (specification.format == null) {\n      if (process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL != null) {\n        (specification as any).format = \"UDZO\"\n      }\n      else if (packager.compression === \"store\") {\n        specification.format = \"UDRO\"\n      }\n      else {\n        specification.format = packager.compression === \"maximum\" ? \"UDBZ\" : \"UDZO\"\n      }\n    }\n\n    if (specification.contents == null) {\n      specification.contents = [\n        {\n          x: 130, y: 220\n        },\n        {\n          x: 410, y: 220, type: \"link\", path: \"/Applications\"\n        }\n      ]\n    }\n    return specification\n  }\n}\n\nasync function createStageDmg(tempDmg: string, appPath: string, volumeName: string) {\n  //noinspection SpellCheckingInspection\n  const imageArgs = addLogLevel([\"create\",\n    \"-srcfolder\", appPath,\n    \"-volname\", volumeName,\n    \"-anyowners\", \"-nospotlight\",\n    \"-format\", \"UDRW\",\n  ])\n  imageArgs.push(\"-fs\", \"HFS+\", \"-fsargs\", \"-c c=64,a=16,e=16\")\n  imageArgs.push(tempDmg)\n  await spawn(\"hdiutil\", imageArgs)\n  return tempDmg\n}\n\nfunction addLogLevel(args: Array<string>): Array<string> {\n  args.push(process.env.DEBUG_DMG === \"true\" ? \"-verbose\" : \"-quiet\")\n  return args\n}\n\nasync function computeAssetSize(cancellationToken: CancellationToken, dmgFile: string, specification: DmgOptions, backgroundFile: string | null | undefined) {\n  const asyncTaskManager = new AsyncTaskManager(cancellationToken)\n  asyncTaskManager.addTask(stat(dmgFile))\n\n  if (specification.icon != null) {\n    asyncTaskManager.addTask(statOrNull(specification.icon))\n  }\n\n  if (backgroundFile != null) {\n    asyncTaskManager.addTask(stat(backgroundFile))\n  }\n\n  let result = 32 * 1024\n  for (const stat of await asyncTaskManager.awaitTasks()) {\n    if (stat != null) {\n      result += stat.size\n    }\n  }\n  return result\n}\n\nasync function customizeDmg(volumePath: string, specification: DmgOptions, packager: MacPackager, backgroundFile: string | null | undefined) {\n  const window = specification.window\n  const env: any = {\n    ...process.env,\n    volumePath,\n    appFileName: `${packager.appInfo.productFilename}.app`,\n    iconSize: specification.iconSize || 80,\n    iconTextSize: specification.iconTextSize || 12,\n\n    PYTHONIOENCODING: \"utf8\",\n  }\n\n  if (specification.backgroundColor != null || specification.background == null) {\n    env.backgroundColor = specification.backgroundColor || \"#ffffff\"\n\n    if (window != null) {\n      env.windowX = (window.x == null ? 100 : window.x).toString()\n      env.windowY = (window.y == null ? 400 : window.y).toString()\n      env.windowWidth = (window.width || 540).toString()\n      env.windowHeight = (window.height || 380).toString()\n    }\n  }\n  else {\n    delete env.backgroundColor\n  }\n\n  const args = [\"dmg\", \"--volume\", volumePath]\n  if (specification.icon != null) {\n    args.push(\"--icon\", (await packager.getResource(specification.icon))!!)\n  }\n  if (backgroundFile != null) {\n    args.push(\"--background\", backgroundFile)\n  }\n\n  const data: any = await executeAppBuilderAsJson(args)\n  if (data.backgroundWidth != null) {\n    env.windowWidth = window == null ? null : window.width\n    env.windowHeight = window == null ? null : window.height\n\n    if (env.windowWidth == null) {\n      env.windowWidth = data.backgroundWidth.toString()\n    }\n    if (env.windowHeight == null) {\n      env.windowHeight = data.backgroundHeight.toString()\n    }\n\n    if (env.windowX == null) {\n      env.windowX = 400\n    }\n    if (env.windowY == null) {\n      env.windowY = Math.round((1440 - env.windowHeight) / 2).toString()\n    }\n  }\n\n  Object.assign(env, data)\n\n  const asyncTaskManager = new AsyncTaskManager(packager.info.cancellationToken)\n  env.iconLocations = await computeDmgEntries(specification, volumePath, packager, asyncTaskManager)\n  await asyncTaskManager.awaitTasks()\n\n  await exec(\"/usr/bin/python\", [path.join(getDmgVendorPath(), \"dmgbuild/core.py\")], {\n    cwd: getDmgVendorPath(),\n    env\n  })\n  return packager.packagerOptions.effectiveOptionComputed == null || !(await packager.packagerOptions.effectiveOptionComputed({volumePath, specification, packager}))\n}\n\nasync function computeDmgEntries(specification: DmgOptions, volumePath: string, packager: MacPackager, asyncTaskManager: AsyncTaskManager): Promise<string> {\n  let result = \"\"\n  for (const c of specification.contents!!) {\n    if (c.path != null && c.path.endsWith(\".app\") && c.type !== \"link\") {\n      log.warn({path: c.path, reason: \"actual path to app will be used instead\"}, \"do not specify path for application\")\n    }\n\n    const entryPath = c.path || `${packager.appInfo.productFilename}.app`\n    const entryName = c.name || path.basename(entryPath)\n    if (result.length !== 0) {\n      result += \",\\n\"\n    }\n    result += `'${entryName}': (${c.x}, ${c.y})`\n\n    if (c.type === \"link\") {\n      asyncTaskManager.addTask(exec(\"ln\", [\"-s\", `/${entryPath.startsWith(\"/\") ? entryPath.substring(1) : entryPath}`, `${volumePath}/${entryName}`]))\n    }\n    // use c.path instead of entryPath (to be sure that this logic is not applied to .app bundle) https://github.com/electron-userland/electron-builder/issues/2147\n    else if (!isEmptyOrSpaces(c.path) && (c.type === \"file\" || c.type === \"dir\")) {\n      const source = await packager.getResource(c.path)\n      if (source == null) {\n        log.warn({entryPath, reason: \"doesn't exist\"}, \"skipped DMG item copying\")\n        continue\n      }\n\n      const destination = `${volumePath}/${entryName}`\n      asyncTaskManager.addTask(c.type === \"dir\" || (await stat(source)).isDirectory() ? copyDir(source, destination) : copyFile(source, destination))\n    }\n  }\n  return result\n}\n"],"sourceRoot":""}
