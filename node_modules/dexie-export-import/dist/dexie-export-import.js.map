{"version":3,"file":"dexie-export-import.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/helpers.ts","../node_modules/typeson/dist/typeson.js","../node_modules/typeson-registry/node_modules/typeson/typeson.js","../node_modules/typeson-registry/node_modules/base64-arraybuffer-es6/src/base64-arraybuffer.js","../node_modules/typeson-registry/types/user-object.js","../node_modules/typeson-registry/presets/sparse-undefined.js","../node_modules/typeson-registry/types/undef.js","../node_modules/typeson-registry/types/primitive-objects.js","../node_modules/typeson-registry/types/nan.js","../node_modules/typeson-registry/types/infinity.js","../node_modules/typeson-registry/types/negative-infinity.js","../node_modules/typeson-registry/types/date.js","../node_modules/typeson-registry/types/regexp.js","../node_modules/typeson-registry/types/map.js","../node_modules/typeson-registry/types/set.js","../node_modules/typeson-registry/types/arraybuffer.js","../node_modules/typeson-registry/types/typed-arrays.js","../node_modules/typeson-registry/types/dataview.js","../node_modules/typeson-registry/types/intl-types.js","../node_modules/typeson-registry/utils/stringArrayBuffer.js","../node_modules/typeson-registry/types/file.js","../node_modules/typeson-registry/presets/structured-cloning.js","../node_modules/typeson-registry/types/imagedata.js","../node_modules/typeson-registry/types/imagebitmap.js","../node_modules/typeson-registry/types/filelist.js","../node_modules/typeson-registry/types/blob.js","../node_modules/base64-arraybuffer-es6/src/base64-arraybuffer.js","../src/tson-typed-array.ts","../src/tson-arraybuffer.ts","../src/tson.ts","../src/export.ts","../src/json-structure.ts","../tools/build-configs/fake-stream.js","../node_modules/clarinet/clarinet.js","../src/json-stream.ts","../src/import.ts","../src/dexie-export-import.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import Dexie from 'dexie';\nimport { DexieExportedDatabase } from './json-structure';\n\nexport function getSchemaString(table: Dexie.Table<any, any>) {\n  const primKeyAndIndexes = [table.schema.primKey].concat(table.schema.indexes);\n  return primKeyAndIndexes.map(index => index.src).join(',');\n}\n\nexport function extractDbSchema(exportedDb: DexieExportedDatabase) {\n  const schema: {\n    [tableName: string]: string;\n  } = {};\n  for (const table of exportedDb.tables) {\n    schema[table.name] = table.schema;\n  }\n  return schema;\n}\n\n\n// Missing FileReaderSync type in standard typescript libs:\ninterface FileReaderSync {\n  readAsArrayBuffer(blob: Blob): ArrayBuffer;\n  readAsBinaryString(blob: Blob): string;\n  readAsDataURL(blob: Blob): string;\n  readAsText(blob: Blob, encoding?: string): string;\n}\ndeclare var FileReaderSync: {\n  prototype: FileReaderSync;\n  new(): FileReaderSync;\n};\n// -----------------------------------------------\n\nexport interface TypeMapper {\n  binary: ArrayBuffer;\n  text: string;\n}\n\nexport function readBlobAsync<T extends keyof TypeMapper>(blob: Blob, type: T): Promise<TypeMapper[T]> {\n  return new Promise<TypeMapper[T]>((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onabort = ev => reject(new Error(\"file read aborted\"));\n    reader.onerror = ev => reject((ev.target as any).error);\n    reader.onload = ev => resolve((ev.target as any).result);\n    if (type === 'binary')\n      reader.readAsArrayBuffer(blob);\n    else\n      reader.readAsText(blob);\n  });\n}\n\nexport function readBlobSync<T extends keyof TypeMapper>(blob: Blob, type: T): TypeMapper[T] {\n  if (typeof FileReaderSync === 'undefined') {\n    throw new Error('FileReaderSync missing. Reading blobs synchronously requires code to run from within a web worker. Use TSON.encapsulateAsync() to do it from the main thread.');\n  }\n  const reader = new FileReaderSync(); // Requires worker environment\n  const data = type === 'binary' ?\n    reader.readAsArrayBuffer(blob) :\n    reader.readAsText(blob);\n\n  return data;\n}\n","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):e.Typeson=n()}(this,function(){\"use strict\";var e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n=function(){return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function sliceIterator(e,n){var t=[],r=!0,i=!1,o=void 0;try{for(var s,c=e[Symbol.iterator]();!(r=(s=c.next()).done)&&(t.push(s.value),!n||t.length!==n);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&c.return&&c.return()}finally{if(i)throw o}}return t}(e,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),t=function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)},r=Object.keys,i=Array.isArray,o={}.toString,s=Object.getPrototypeOf,c={}.hasOwnProperty,a=c.toString,u=[\"type\",\"replaced\",\"iterateIn\",\"iterateUnsetNumeric\"];function isThenable(e,n){return Typeson.isObject(e)&&\"function\"==typeof e.then&&(!n||\"function\"==typeof e.catch)}function toStringTag(e){return o.call(e).slice(8,-1)}function hasConstructorOf(n,t){if(!n||\"object\"!==(void 0===n?\"undefined\":e(n)))return!1;var r=s(n);if(!r)return!1;var i=c.call(r,\"constructor\")&&r.constructor;return\"function\"!=typeof i?null===t:\"function\"==typeof i&&null!==t&&a.call(i)===a.call(t)}function isPlainObject(e){return!(!e||\"Object\"!==toStringTag(e))&&(!s(e)||hasConstructorOf(e,Object))}function isObject(n){return n&&\"object\"===(void 0===n?\"undefined\":e(n))}function Typeson(o){var s=[],c=[],a={},y=this.types={},p=this.stringify=function(e,n,t,r){r=Object.assign({},o,r,{stringification:!0});var s=l(e,null,r);return i(s)?JSON.stringify(s[0],n,t):s.then(function(e){return JSON.stringify(e,n,t)})};this.stringifySync=function(e,n,t,r){return p(e,n,t,Object.assign({},{throwOnBadSyncType:!0},r,{sync:!0}))},this.stringifyAsync=function(e,n,t,r){return p(e,n,t,Object.assign({},{throwOnBadSyncType:!0},r,{sync:!1}))};var f=this.parse=function(e,n,t){return t=Object.assign({},o,t,{parse:!0}),h(JSON.parse(e,n),t)};this.parseSync=function(e,n,t){return f(e,n,Object.assign({},{throwOnBadSyncType:!0},t,{sync:!0}))},this.parseAsync=function(e,n,t){return f(e,n,Object.assign({},{throwOnBadSyncType:!0},t,{sync:!1}))},this.specialTypeNames=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return t.returnTypeNames=!0,this.encapsulate(e,n,t)},this.rootTypeName=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return t.iterateNone=!0,this.encapsulate(e,n,t)};var l=this.encapsulate=function(y,p,f){var l=(f=Object.assign({sync:!0},o,f)).sync,h={},v=[],d=[],b=[],O=!(f&&\"cyclic\"in f)||f.cyclic,m=f.encapsulateObserver,T=_encapsulate(\"\",y,O,p||{},b);function finish(e){var n=Object.values(h);if(f.iterateNone)return n.length?n[0]:Typeson.getJSONType(e);if(n.length){if(f.returnTypeNames)return[].concat(t(new Set(n)));e&&isPlainObject(e)&&!e.hasOwnProperty(\"$types\")?e.$types=h:e={$:e,$types:{$:h}}}else isObject(e)&&e.hasOwnProperty(\"$types\")&&(e={$:e,$types:!0});return!f.returnTypeNames&&e}return b.length?l&&f.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():Promise.resolve(function checkPromises(e,t){return Promise.all(t.map(function(e){return e[1].p})).then(function(r){return Promise.all(r.map(function(r){var i=[],o=t.splice(0,1)[0],s=n(o,7),c=s[0],a=s[2],u=s[3],y=s[4],p=s[5],f=s[6],l=_encapsulate(c,r,a,u,i,!0,f),h=hasConstructorOf(l,TypesonPromise);return c&&h?l.p.then(function(n){return y[p]=n,checkPromises(e,i)}):(c?y[p]=l:e=h?l.p:l,checkPromises(e,i))}))}).then(function(){return e})}(T,b)).then(finish):!l&&f.throwOnBadSyncType?function(){throw new TypeError(\"Async method requested but sync result obtained\")}():f.stringification&&l?[finish(T)]:l?finish(T):Promise.resolve(finish(T));function _adaptBuiltinStateObjectProperties(e,n,t){Object.assign(e,n);var r=u.map(function(n){var t=e[n];return delete e[n],t});t(),u.forEach(function(n,t){e[n]=r[t]})}function _encapsulate(n,t,o,c,a,u,y){var p=void 0,l={},b=void 0===t?\"undefined\":e(t),O=m?function(e){var r=y||c.type||Typeson.getJSONType(t);m(Object.assign(e||l,{keypath:n,value:t,cyclic:o,stateObj:c,promisesData:a,resolvingTypesonPromise:u,awaitingTypesonPromise:hasConstructorOf(t,TypesonPromise)},void 0!==r?{type:r}:{}))}:null;if(b in{string:1,boolean:1,number:1,undefined:1})return void 0===t||\"number\"===b&&(isNaN(t)||t===-1/0||t===1/0)?(p=replace(n,t,c,a,!1,u,O))!==t&&(l={replaced:p}):p=t,O&&O(),p;if(null===t)return O&&O(),t;if(o&&!c.iterateIn&&!c.iterateUnsetNumeric){var T=v.indexOf(t);if(!(T<0))return h[n]=\"#\",O&&O({cyclicKeypath:d[T]}),\"#\"+d[T];!0===o&&(v.push(t),d.push(n))}var g=isPlainObject(t),P=i(t),j=(g||P)&&(!s.length||c.replaced)||c.iterateIn?t:replace(n,t,c,a,g||P,null,O),S=void 0;if(j!==t?(p=j,l={replaced:j}):P||\"array\"===c.iterateIn?(S=new Array(t.length),l={clone:S}):g||\"object\"===c.iterateIn?l={clone:S={}}:\"\"===n&&hasConstructorOf(t,TypesonPromise)?(a.push([n,t,o,c,void 0,void 0,c.type]),p=t):p=t,O&&O(),f.iterateNone)return S||p;if(!S)return p;if(c.iterateIn){var w=function _loop(e){var r={ownKeys:t.hasOwnProperty(e)};_adaptBuiltinStateObjectProperties(c,r,function(){var r=n+(n?\".\":\"\")+escapeKeyPathComponent(e),i=_encapsulate(r,t[e],!!o,c,a,u);hasConstructorOf(i,TypesonPromise)?a.push([r,i,!!o,c,S,e,c.type]):void 0!==i&&(S[e]=i)})};for(var A in t)w(A);O&&O({endIterateIn:!0,end:!0})}else r(t).forEach(function(e){var r=n+(n?\".\":\"\")+escapeKeyPathComponent(e);_adaptBuiltinStateObjectProperties(c,{ownKeys:!0},function(){var n=_encapsulate(r,t[e],!!o,c,a,u);hasConstructorOf(n,TypesonPromise)?a.push([r,n,!!o,c,S,e,c.type]):void 0!==n&&(S[e]=n)})}),O&&O({endIterateOwn:!0,end:!0});if(c.iterateUnsetNumeric){for(var C=t.length,N=function _loop2(e){if(!(e in t)){var r=n+(n?\".\":\"\")+e;_adaptBuiltinStateObjectProperties(c,{ownKeys:!1},function(){var n=_encapsulate(r,void 0,!!o,c,a,u);hasConstructorOf(n,TypesonPromise)?a.push([r,n,!!o,c,S,e,c.type]):void 0!==n&&(S[e]=n)})}},B=0;B<C;B++)N(B);O&&O({endIterateUnsetNumeric:!0,end:!0})}return S}function replace(e,n,t,r,i,o,u){for(var y=i?s:c,p=y.length;p--;){var f=y[p];if(f.test(n,t)){var v=f.type;if(a[v]){var d=h[e];h[e]=d?[v].concat(d):v}return Object.assign(t,{type:v,replaced:!0}),!l&&f.replaceAsync||f.replace?(u&&u({replacing:!0}),_encapsulate(e,f[l||!f.replaceAsync?\"replace\":\"replaceAsync\"](n,t),O&&\"readonly\",t,r,o,v)):(u&&u({typeDetected:!0}),_encapsulate(e,n,O&&\"readonly\",t,r,o,v))}}return n}};this.encapsulateSync=function(e,n,t){return l(e,n,Object.assign({},{throwOnBadSyncType:!0},t,{sync:!0}))},this.encapsulateAsync=function(e,n,t){return l(e,n,Object.assign({},{throwOnBadSyncType:!0},t,{sync:!1}))};var h=this.revive=function(e,t){var s=(t=Object.assign({sync:!0},o,t)).sync,c=e&&e.$types,u=!0;if(!c)return e;if(!0===c)return e.$;c.$&&isPlainObject(c.$)&&(e=e.$,c=c.$,u=!1);var y=[],p={},f=function _revive(e,t,o,s,f,l){if(u&&\"$types\"===e)return;var h=c[e];if(i(t)||isPlainObject(t)){var v=i(t)?new Array(t.length):{};for(r(t).forEach(function(n){var r=_revive(e+(e?\".\":\"\")+escapeKeyPathComponent(n),t[n],o||v,s,v,n);hasConstructorOf(r,Undefined)?v[n]=void 0:void 0!==r&&(v[n]=r)}),t=v;y.length;){var d=n(y[0],4),b=d[0],O=d[1],m=d[2],T=d[3],g=getByKeyPath(b,O);if(hasConstructorOf(g,Undefined))m[T]=void 0;else{if(void 0===g)break;m[T]=g}y.splice(0,1)}}if(!h)return t;if(\"#\"===h){var P=getByKeyPath(o,t.substr(1));return void 0===P&&y.push([o,t.substr(1),f,l]),P}var j=s.sync;return[].concat(h).reduce(function(e,n){var t=a[n];if(!t)throw new Error(\"Unregistered type: \"+n);return t[j&&t.revive?\"revive\":!j&&t.reviveAsync?\"reviveAsync\":\"revive\"](e,p)},t)}(\"\",e,null,t);return isThenable(f=hasConstructorOf(f,Undefined)?void 0:f)?s&&t.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():f:!s&&t.throwOnBadSyncType?function(){throw new TypeError(\"Async method requested but sync result obtained\")}():s?f:Promise.resolve(f)};this.reviveSync=function(e,n){return h(e,Object.assign({},{throwOnBadSyncType:!0},n,{sync:!0}))},this.reviveAsync=function(e,n){return h(e,Object.assign({},{throwOnBadSyncType:!0},n,{sync:!1}))},this.register=function(e,n){return n=n||{},[].concat(e).forEach(function R(e){if(i(e))return e.map(R);e&&r(e).forEach(function(t){if(\"#\"===t)throw new TypeError(\"# cannot be used as a type name as it is reserved for cyclic objects\");if(Typeson.JSON_TYPES.includes(t))throw new TypeError(\"Plain JSON object types are reserved as type names\");var r=e[t],o=r.testPlainObjects?s:c,u=o.filter(function(e){return e.type===t});if(u.length&&(o.splice(o.indexOf(u[0]),1),delete a[t],delete y[t]),r){if(\"function\"==typeof r){var p=r;r={test:function test(e){return e&&e.constructor===p},replace:function replace(e){return assign({},e)},revive:function revive(e){return assign(Object.create(p.prototype),e)}}}else i(r)&&(r={test:r[0],replace:r[1],revive:r[2]});var f={type:t,test:r.test.bind(r)};r.replace&&(f.replace=r.replace.bind(r)),r.replaceAsync&&(f.replaceAsync=r.replaceAsync.bind(r));var l=\"number\"==typeof n.fallback?n.fallback:n.fallback?0:1/0;if(r.testPlainObjects?s.splice(l,0,f):c.splice(l,0,f),r.revive||r.reviveAsync){var h={};r.revive&&(h.revive=r.revive.bind(r)),r.reviveAsync&&(h.reviveAsync=r.reviveAsync.bind(r)),a[t]=h}y[t]=r}})}),this}}function assign(e,n){return r(n).map(function(t){e[t]=n[t]}),e}function escapeKeyPathComponent(e){return e.replace(/~/g,\"~0\").replace(/\\./g,\"~1\")}function unescapeKeyPathComponent(e){return e.replace(/~1/g,\".\").replace(/~0/g,\"~\")}function getByKeyPath(e,n){if(\"\"===n)return e;var t=n.indexOf(\".\");if(t>-1){var r=e[unescapeKeyPathComponent(n.substr(0,t))];return void 0===r?void 0:getByKeyPath(r,n.substr(t+1))}return e[unescapeKeyPathComponent(n)]}function Undefined(){}function TypesonPromise(e){this.p=new Promise(e)}return TypesonPromise.prototype.then=function(e,n){var t=this;return new TypesonPromise(function(r,i){t.p.then(function(n){r(e?e(n):n)},function(e){t.p.catch(function(e){return n?n(e):Promise.reject(e)}).then(r,i)})})},TypesonPromise.prototype.catch=function(e){return this.then(null,e)},TypesonPromise.resolve=function(e){return new TypesonPromise(function(n){n(e)})},TypesonPromise.reject=function(e){return new TypesonPromise(function(n,t){t(e)})},[\"all\",\"race\"].map(function(e){TypesonPromise[e]=function(n){return new TypesonPromise(function(t,r){Promise[e](n.map(function(e){return e.p})).then(t,r)})}}),Typeson.Undefined=Undefined,Typeson.Promise=TypesonPromise,Typeson.isThenable=isThenable,Typeson.toStringTag=toStringTag,Typeson.hasConstructorOf=hasConstructorOf,Typeson.isObject=isObject,Typeson.isPlainObject=isPlainObject,Typeson.isUserObject=function isUserObject(e){if(!e||\"Object\"!==toStringTag(e))return!1;var n=s(e);return!n||hasConstructorOf(e,Object)||isUserObject(n)},Typeson.escapeKeyPathComponent=escapeKeyPathComponent,Typeson.unescapeKeyPathComponent=unescapeKeyPathComponent,Typeson.getByKeyPath=getByKeyPath,Typeson.getJSONType=function(n){return null===n?\"null\":i(n)?\"array\":void 0===n?\"undefined\":e(n)},Typeson.JSON_TYPES=[\"null\",\"boolean\",\"number\",\"string\",\"array\",\"object\"],Typeson});\n","const keys = Object.keys,\n    isArray = Array.isArray,\n    toString = ({}.toString),\n    getProto = Object.getPrototypeOf,\n    hasOwn = ({}.hasOwnProperty),\n    fnToString = hasOwn.toString,\n    internalStateObjPropsToIgnore = ['type', 'replaced', 'iterateIn', 'iterateUnsetNumeric'];\n\nfunction isThenable (v, catchCheck) {\n    return Typeson.isObject(v) && typeof v.then === 'function' && (!catchCheck || typeof v.catch === 'function');\n}\n\nfunction toStringTag (val) {\n    return toString.call(val).slice(8, -1);\n}\n\n// This function is dependent on both constructors\n//   being identical so any minimization is expected of both\nfunction hasConstructorOf (a, b) {\n    if (!a || typeof a !== 'object') {\n        return false;\n    }\n    const proto = getProto(a);\n    if (!proto) {\n        return false;\n    }\n    const Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    if (typeof Ctor !== 'function') {\n        return b === null;\n    }\n    return typeof Ctor === 'function' && b !== null && fnToString.call(Ctor) === fnToString.call(b);\n}\n\nfunction isPlainObject (val) { // Mirrors jQuery's\n    if (!val || toStringTag(val) !== 'Object') {\n        return false;\n    }\n\n    const proto = getProto(val);\n    if (!proto) { // `Object.create(null)`\n        return true;\n    }\n\n    return hasConstructorOf(val, Object);\n}\n\nfunction isUserObject (val) {\n    if (!val || toStringTag(val) !== 'Object') {\n        return false;\n    }\n\n    const proto = getProto(val);\n    if (!proto) { // `Object.create(null)`\n        return true;\n    }\n    return hasConstructorOf(val, Object) || isUserObject(proto);\n}\n\nfunction isObject (v) {\n    return v && typeof v === 'object';\n}\n\n/* Typeson - JSON with types\n    * License: The MIT License (MIT)\n    * Copyright (c) 2016 David Fahlander\n    */\n\n/** An instance of this class can be used to call stringify() and parse().\n * Typeson resolves cyclic references by default. Can also be extended to\n * support custom types using the register() method.\n *\n * @constructor\n * @param {{cyclic: boolean}} [options] - if cyclic (default true), cyclic references will be handled gracefully.\n */\nfunction Typeson (options) {\n    // Replacers signature: replace (value). Returns falsy if not replacing. Otherwise ['Date', value.getTime()]\n    const plainObjectReplacers = [];\n    const nonplainObjectReplacers = [];\n    // Revivers: map {type => reviver}. Sample: {'Date': value => new Date(value)}\n    const revivers = {};\n\n    /** Types registered via register() */\n    const regTypes = this.types = {};\n\n    /** Serialize given object to Typeson.\n     *\n     * Arguments works identical to those of JSON.stringify().\n     */\n    const stringify = this.stringify = function (obj, replacer, space, opts) { // replacer here has nothing to do with our replacers.\n        opts = Object.assign({}, options, opts, {stringification: true});\n        const encapsulated = encapsulate(obj, null, opts);\n        if (isArray(encapsulated)) {\n            return JSON.stringify(encapsulated[0], replacer, space);\n        }\n        return encapsulated.then((res) => {\n            return JSON.stringify(res, replacer, space);\n        });\n    };\n\n    // Also sync but throws on non-sync result\n    this.stringifySync = function (obj, replacer, space, opts) {\n        return stringify(obj, replacer, space, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: true}));\n    };\n    this.stringifyAsync = function (obj, replacer, space, opts) {\n        return stringify(obj, replacer, space, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: false}));\n    };\n\n    /** Parse Typeson back into an obejct.\n     *\n     * Arguments works identical to those of JSON.parse().\n     */\n    const parse = this.parse = function (text, reviver, opts) {\n        opts = Object.assign({}, options, opts, {parse: true});\n        return revive(JSON.parse(text, reviver), opts); // This reviver has nothing to do with our revivers.\n    };\n\n    // Also sync but throws on non-sync result\n    this.parseSync = function (text, reviver, opts) {\n        return parse(text, reviver, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: true})); // This reviver has nothing to do with our revivers.\n    };\n    this.parseAsync = function (text, reviver, opts) {\n        return parse(text, reviver, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: false})); // This reviver has nothing to do with our revivers.\n    };\n\n    this.specialTypeNames = function (obj, stateObj, opts = {}) {\n        opts.returnTypeNames = true;\n        return this.encapsulate(obj, stateObj, opts);\n    };\n    this.rootTypeName = function (obj, stateObj, opts = {}) {\n        opts.iterateNone = true;\n        return this.encapsulate(obj, stateObj, opts);\n    };\n\n    /** Encapsulate a complex object into a plain Object by replacing registered types with\n     * plain objects representing the types data.\n     *\n     * This method is used internally by Typeson.stringify().\n     * @param {Object} obj - Object to encapsulate.\n     */\n    const encapsulate = this.encapsulate = function (obj, stateObj, opts) {\n        opts = Object.assign({sync: true}, options, opts);\n        const sync = opts.sync;\n        const types = {},\n            refObjs = [], // For checking cyclic references\n            refKeys = [], // For checking cyclic references\n            promisesDataRoot = [];\n        // Clone the object deeply while at the same time replacing any special types or cyclic reference:\n        const cyclic = opts && ('cyclic' in opts) ? opts.cyclic : true;\n        const encapsulateObserver = opts.encapsulateObserver;\n        const ret = _encapsulate('', obj, cyclic, stateObj || {}, promisesDataRoot);\n        function finish (ret) {\n            // Add $types to result only if we ever bumped into a special type (or special case where object has own `$types`)\n            const typeNames = Object.values(types);\n            if (opts.iterateNone) {\n                if (typeNames.length) {\n                    return typeNames[0];\n                }\n                return Typeson.getJSONType(ret);\n            }\n            if (typeNames.length) {\n                if (opts.returnTypeNames) {\n                    return [...new Set(typeNames)];\n                }\n                if (!ret || !isPlainObject(ret) || // Special if array (or a primitive) was serialized because JSON would ignore custom `$types` prop on it\n                    ret.hasOwnProperty('$types') // Also need to handle if this is an object with its own `$types` property (to avoid ambiguity)\n                ) {\n                    ret = {$: ret, $types: {$: types}};\n                } else {\n                    ret.$types = types;\n                }\n            } else if (isObject(ret) && ret.hasOwnProperty('$types')) { // No special types\n                ret = {$: ret, $types: true};\n            }\n            if (opts.returnTypeNames) {\n                return false;\n            }\n            return ret;\n        }\n        function checkPromises (ret, promisesData) {\n            return Promise.all(\n                promisesData.map((pd) => { return pd[1].p; })\n            ).then(function (promResults) {\n                return Promise.all(\n                    promResults.map(function (promResult) {\n                        const newPromisesData = [];\n                        const prData = promisesData.splice(0, 1)[0];\n                        const [keyPath, , cyclic, stateObj, parentObj, key, detectedType] = prData;\n\n                        const encaps = _encapsulate(keyPath, promResult, cyclic, stateObj, newPromisesData, true, detectedType);\n                        const isTypesonPromise = hasConstructorOf(encaps, TypesonPromise);\n                        if (keyPath && isTypesonPromise) { // Handle case where an embedded custom type itself returns a `Typeson.Promise`\n                            return encaps.p.then(function (encaps2) {\n                                parentObj[key] = encaps2;\n                                return checkPromises(ret, newPromisesData);\n                            });\n                        }\n                        if (keyPath) parentObj[key] = encaps;\n                        else if (isTypesonPromise) {\n                            ret = encaps.p;\n                        } else ret = encaps; // If this is itself a `Typeson.Promise` (because the original value supplied was a promise or because the supplied custom type value resolved to one), returning it below will be fine since a promise is expected anyways given current config (and if not a promise, it will be ready as the resolve value)\n                        return checkPromises(ret, newPromisesData);\n                    })\n                );\n            }).then(() => ret);\n        };\n        return promisesDataRoot.length\n            ? sync && opts.throwOnBadSyncType\n                ? (() => {\n                    throw new TypeError('Sync method requested but async result obtained');\n                })()\n                : Promise.resolve(checkPromises(ret, promisesDataRoot)).then(finish)\n            : !sync && opts.throwOnBadSyncType\n                ? (() => {\n                    throw new TypeError('Async method requested but sync result obtained');\n                })()\n                : (opts.stringification && sync // If this is a synchronous request for stringification, yet a promise is the result, we don't want to resolve leading to an async result, so we return an array to avoid ambiguity\n                    ? [finish(ret)]\n                    : (sync\n                        ? finish(ret)\n                        : Promise.resolve(finish(ret))\n                    ));\n\n        function _adaptBuiltinStateObjectProperties (stateObj, ownKeysObj, cb) {\n            Object.assign(stateObj, ownKeysObj);\n            const vals = internalStateObjPropsToIgnore.map((prop) => {\n                const tmp = stateObj[prop];\n                delete stateObj[prop];\n                return tmp;\n            });\n            cb();\n            internalStateObjPropsToIgnore.forEach((prop, i) => {\n                stateObj[prop] = vals[i];\n            });\n        }\n        function _encapsulate (keypath, value, cyclic, stateObj, promisesData, resolvingTypesonPromise, detectedType) {\n            let ret;\n            let observerData = {};\n            const $typeof = typeof value;\n            const runObserver = encapsulateObserver ? function (obj) {\n                const type = detectedType || stateObj.type || (\n                    Typeson.getJSONType(value)\n                );\n                encapsulateObserver(Object.assign(obj || observerData, {\n                    keypath,\n                    value,\n                    cyclic,\n                    stateObj,\n                    promisesData,\n                    resolvingTypesonPromise,\n                    awaitingTypesonPromise: hasConstructorOf(value, TypesonPromise)\n                }, type !== undefined ? {type} : {}));\n            } : null;\n            if ($typeof in {string: 1, boolean: 1, number: 1, undefined: 1}) {\n                if (value === undefined || ($typeof === 'number' &&\n                    (isNaN(value) || value === -Infinity || value === Infinity))) {\n                    ret = replace(keypath, value, stateObj, promisesData, false, resolvingTypesonPromise, runObserver);\n                    if (ret !== value) {\n                        observerData = {replaced: ret};\n                    }\n                } else {\n                    ret = value;\n                }\n                if (runObserver) runObserver();\n                return ret;\n            }\n            if (value === null) {\n                if (runObserver) runObserver();\n                return value;\n            }\n            if (cyclic && !stateObj.iterateIn && !stateObj.iterateUnsetNumeric) {\n                // Options set to detect cyclic references and be able to rewrite them.\n                const refIndex = refObjs.indexOf(value);\n                if (refIndex < 0) {\n                    if (cyclic === true) {\n                        refObjs.push(value);\n                        refKeys.push(keypath);\n                    }\n                } else {\n                    types[keypath] = '#';\n                    if (runObserver) {\n                        runObserver({\n                            cyclicKeypath: refKeys[refIndex]\n                        });\n                    }\n                    return '#' + refKeys[refIndex];\n                }\n            }\n            const isPlainObj = isPlainObject(value);\n            const isArr = isArray(value);\n            const replaced = (\n                ((isPlainObj || isArr) && (!plainObjectReplacers.length || stateObj.replaced)) ||\n                stateObj.iterateIn // Running replace will cause infinite loop as will test positive again\n            )\n                // Optimization: if plain object and no plain-object replacers, don't try finding a replacer\n                ? value\n                : replace(keypath, value, stateObj, promisesData, isPlainObj || isArr, null, runObserver);\n            let clone;\n            if (replaced !== value) {\n                ret = replaced;\n                observerData = {replaced: replaced};\n            } else {\n                if (isArr || stateObj.iterateIn === 'array') {\n                    clone = new Array(value.length);\n                    observerData = {clone: clone};\n                } else if (isPlainObj || stateObj.iterateIn === 'object') {\n                    clone = {};\n                    observerData = {clone: clone};\n                } else if (keypath === '' && hasConstructorOf(value, TypesonPromise)) {\n                    promisesData.push([keypath, value, cyclic, stateObj, undefined, undefined, stateObj.type]);\n                    ret = value;\n                } else {\n                    ret = value; // Only clone vanilla objects and arrays\n                }\n            }\n            if (runObserver) runObserver();\n\n            if (opts.iterateNone) {\n                return clone || ret;\n            }\n\n            if (!clone) {\n                return ret;\n            }\n\n            // Iterate object or array\n            if (stateObj.iterateIn) {\n                for (const key in value) {\n                    const ownKeysObj = {ownKeys: value.hasOwnProperty(key)};\n                    _adaptBuiltinStateObjectProperties(stateObj, ownKeysObj, () => {\n                        const kp = keypath + (keypath ? '.' : '') + escapeKeyPathComponent(key);\n                        const val = _encapsulate(kp, value[key], !!cyclic, stateObj, promisesData, resolvingTypesonPromise);\n                        if (hasConstructorOf(val, TypesonPromise)) {\n                            promisesData.push([kp, val, !!cyclic, stateObj, clone, key, stateObj.type]);\n                        } else if (val !== undefined) clone[key] = val;\n                    });\n                }\n                if (runObserver) runObserver({endIterateIn: true, end: true});\n            } else { // Note: Non-indexes on arrays won't survive stringify so somewhat wasteful for arrays, but so too is iterating all numeric indexes on sparse arrays when not wanted or filtering own keys for positive integers\n                keys(value).forEach(function (key) {\n                    const kp = keypath + (keypath ? '.' : '') + escapeKeyPathComponent(key);\n                    const ownKeysObj = {ownKeys: true};\n                    _adaptBuiltinStateObjectProperties(stateObj, ownKeysObj, () => {\n                        const val = _encapsulate(kp, value[key], !!cyclic, stateObj, promisesData, resolvingTypesonPromise);\n                        if (hasConstructorOf(val, TypesonPromise)) {\n                            promisesData.push([kp, val, !!cyclic, stateObj, clone, key, stateObj.type]);\n                        } else if (val !== undefined) clone[key] = val;\n                    });\n                });\n                if (runObserver) runObserver({endIterateOwn: true, end: true});\n            }\n            // Iterate array for non-own numeric properties (we can't replace the prior loop though as it iterates non-integer keys)\n            if (stateObj.iterateUnsetNumeric) {\n                const vl = value.length;\n                for (let i = 0; i < vl; i++) {\n                    if (!(i in value)) {\n                        const kp = keypath + (keypath ? '.' : '') + i; // No need to escape numeric\n                        const ownKeysObj = {ownKeys: false};\n                        _adaptBuiltinStateObjectProperties(stateObj, ownKeysObj, () => {\n                            const val = _encapsulate(kp, undefined, !!cyclic, stateObj, promisesData, resolvingTypesonPromise);\n                            if (hasConstructorOf(val, TypesonPromise)) {\n                                promisesData.push([kp, val, !!cyclic, stateObj, clone, i, stateObj.type]);\n                            } else if (val !== undefined) clone[i] = val;\n                        });\n                    }\n                }\n                if (runObserver) runObserver({endIterateUnsetNumeric: true, end: true});\n            }\n            return clone;\n        }\n\n        function replace (keypath, value, stateObj, promisesData, plainObject, resolvingTypesonPromise, runObserver) {\n            // Encapsulate registered types\n            const replacers = plainObject ? plainObjectReplacers : nonplainObjectReplacers;\n            let i = replacers.length;\n            while (i--) {\n                const replacer = replacers[i];\n                if (replacer.test(value, stateObj)) {\n                    const type = replacer.type;\n                    if (revivers[type]) {\n                        // Record the type only if a corresponding reviver exists.\n                        // This is to support specs where only replacement is done.\n                        // For example ensuring deep cloning of the object, or\n                        // replacing a type to its equivalent without the need to revive it.\n                        const existing = types[keypath];\n                        // type can comprise an array of types (see test shouldSupportIntermediateTypes)\n                        types[keypath] = existing ? [type].concat(existing) : type;\n                    }\n                    // Now, also traverse the result in case it contains its own types to replace\n                    Object.assign(stateObj, {type, replaced: true});\n                    if ((sync || !replacer.replaceAsync) && !replacer.replace) {\n                        if (runObserver) runObserver({typeDetected: true});\n                        return _encapsulate(keypath, value, cyclic && 'readonly', stateObj, promisesData, resolvingTypesonPromise, type);\n                    }\n                    if (runObserver) runObserver({replacing: true});\n\n                    const replaceMethod = sync || !replacer.replaceAsync ? 'replace' : 'replaceAsync';\n                    return _encapsulate(keypath, replacer[replaceMethod](value, stateObj), cyclic && 'readonly', stateObj, promisesData, resolvingTypesonPromise, type);\n                }\n            }\n            return value;\n        }\n    };\n\n    // Also sync but throws on non-sync result\n    this.encapsulateSync = function (obj, stateObj, opts) {\n        return encapsulate(obj, stateObj, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: true}));\n    };\n    this.encapsulateAsync = function (obj, stateObj, opts) {\n        return encapsulate(obj, stateObj, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: false}));\n    };\n\n    /** Revive an encapsulated object.\n     * This method is used internally by Typeson.parse().\n     * @param {Object} obj - Object to revive. If it has $types member, the properties that are listed there\n     * will be replaced with its true type instead of just plain objects.\n     */\n    const revive = this.revive = function (obj, opts) {\n        opts = Object.assign({sync: true}, options, opts);\n        const sync = opts.sync;\n        let types = obj && obj.$types,\n            ignore$Types = true;\n        if (!types) return obj; // No type info added. Revival not needed.\n        if (types === true) return obj.$; // Object happened to have own `$types` property but with no actual types, so we unescape and return that object\n        if (types.$ && isPlainObject(types.$)) {\n            // Special when root object is not a trivial Object, it will be encapsulated in $. It will also be encapsulated in $ if it has its own `$` property to avoid ambiguity\n            obj = obj.$;\n            types = types.$;\n            ignore$Types = false;\n        }\n        const keyPathResolutions = [];\n        const stateObj = {};\n        let ret = _revive('', obj, null, opts);\n        ret = hasConstructorOf(ret, Undefined) ? undefined : ret;\n        return isThenable(ret)\n            ? sync && opts.throwOnBadSyncType\n                ? (() => {\n                    throw new TypeError('Sync method requested but async result obtained');\n                })()\n                : ret\n            : !sync && opts.throwOnBadSyncType\n                ? (() => {\n                    throw new TypeError('Async method requested but sync result obtained');\n                })()\n                : sync\n                    ? ret\n                    : Promise.resolve(ret);\n\n        function _revive (keypath, value, target, opts, clone, key) {\n            if (ignore$Types && keypath === '$types') return;\n            const type = types[keypath];\n            if (isArray(value) || isPlainObject(value)) {\n                const clone = isArray(value) ? new Array(value.length) : {};\n                // Iterate object or array\n                keys(value).forEach((key) => {\n                    const val = _revive(\n                        keypath + (keypath ? '.' : '') + escapeKeyPathComponent(key), value[key],\n                        target || clone,\n                        opts,\n                        clone,\n                        key\n                    );\n                    if (hasConstructorOf(val, Undefined)) clone[key] = undefined;\n                    else if (val !== undefined) clone[key] = val;\n                });\n                value = clone;\n                while (keyPathResolutions.length) { // Try to resolve cyclic reference as soon as available\n                    const [[target, keyPath, clone, key]] = keyPathResolutions;\n                    const val = getByKeyPath(target, keyPath);\n                    if (hasConstructorOf(val, Undefined)) clone[key] = undefined;\n                    else if (val !== undefined) clone[key] = val;\n                    else break;\n                    keyPathResolutions.splice(0, 1);\n                }\n            }\n            if (!type) return value;\n            if (type === '#') {\n                const ret = getByKeyPath(target, value.substr(1));\n                if (ret === undefined) { // Cyclic reference not yet available\n                    keyPathResolutions.push([target, value.substr(1), clone, key]);\n                }\n                return ret;\n            }\n            const sync = opts.sync;\n            return [].concat(type).reduce((val, type) => {\n                const reviver = revivers[type];\n                if (!reviver) throw new Error('Unregistered type: ' + type);\n                return reviver[ // eslint-disable-line standard/computed-property-even-spacing\n                    sync && reviver.revive\n                        ? 'revive'\n                        : !sync && reviver.reviveAsync\n                            ? 'reviveAsync'\n                            : 'revive'\n                ](val, stateObj);\n            }, value);\n        }\n    };\n\n    // Also sync but throws on non-sync result\n    this.reviveSync = function (obj, opts) {\n        return revive(obj, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: true}));\n    };\n    this.reviveAsync = function (obj, opts) {\n        return revive(obj, Object.assign({}, {throwOnBadSyncType: true}, opts, {sync: false}));\n    };\n\n    /** Register types.\n     * For examples how to use this method, see https://github.com/dfahlander/typeson-registry/tree/master/types\n     * @param {Array.<Object.<string,Function[]>>} typeSpec - Types and their functions [test, encapsulate, revive];\n     */\n    this.register = function (typeSpecSets, opts) {\n        opts = opts || {};\n        [].concat(typeSpecSets).forEach(function R (typeSpec) {\n            if (isArray(typeSpec)) return typeSpec.map(R); // Allow arrays of arrays of arrays...\n            typeSpec && keys(typeSpec).forEach(function (typeId) {\n                if (typeId === '#') {\n                    throw new TypeError('# cannot be used as a type name as it is reserved for cyclic objects');\n                } else if (Typeson.JSON_TYPES.includes(typeId)) {\n                    throw new TypeError('Plain JSON object types are reserved as type names');\n                }\n                let spec = typeSpec[typeId];\n                const replacers = spec.testPlainObjects ? plainObjectReplacers : nonplainObjectReplacers;\n                const existingReplacer = replacers.filter(function (r) { return r.type === typeId; });\n                if (existingReplacer.length) {\n                    // Remove existing spec and replace with this one.\n                    replacers.splice(replacers.indexOf(existingReplacer[0]), 1);\n                    delete revivers[typeId];\n                    delete regTypes[typeId];\n                }\n                if (spec) {\n                    if (typeof spec === 'function') {\n                        // Support registering just a class without replacer/reviver\n                        const Class = spec;\n                        spec = {\n                            test: (x) => x && x.constructor === Class,\n                            replace: (x) => assign({}, x),\n                            revive: (x) => assign(Object.create(Class.prototype), x)\n                        };\n                    } else if (isArray(spec)) {\n                        spec = {\n                            test: spec[0],\n                            replace: spec[1],\n                            revive: spec[2]\n                        };\n                    }\n                    const replacerObj = {\n                        type: typeId,\n                        test: spec.test.bind(spec)\n                    };\n                    if (spec.replace) {\n                        replacerObj.replace = spec.replace.bind(spec);\n                    }\n                    if (spec.replaceAsync) {\n                        replacerObj.replaceAsync = spec.replaceAsync.bind(spec);\n                    }\n                    const start = typeof opts.fallback === 'number' ? opts.fallback : (opts.fallback ? 0 : Infinity);\n                    if (spec.testPlainObjects) {\n                        plainObjectReplacers.splice(start, 0, replacerObj);\n                    } else {\n                        nonplainObjectReplacers.splice(start, 0, replacerObj);\n                    }\n                    // Todo: We might consider a testAsync type\n                    if (spec.revive || spec.reviveAsync) {\n                        const reviverObj = {};\n                        if (spec.revive) reviverObj.revive = spec.revive.bind(spec);\n                        if (spec.reviveAsync) reviverObj.reviveAsync = spec.reviveAsync.bind(spec);\n                        revivers[typeId] = reviverObj;\n                    }\n\n                    regTypes[typeId] = spec; // Record to be retrieved via public types property.\n                }\n            });\n        });\n        return this;\n    };\n}\n\nfunction assign (t, s) {\n    keys(s).map((k) => { t[k] = s[k]; });\n    return t;\n}\n\n/** escapeKeyPathComponent() utility */\nfunction escapeKeyPathComponent (keyPathComponent) {\n    return keyPathComponent.replace(/~/g, '~0').replace(/\\./g, '~1');\n}\n\n/** unescapeKeyPathComponent() utility */\nfunction unescapeKeyPathComponent (keyPathComponent) {\n    return keyPathComponent.replace(/~1/g, '.').replace(/~0/g, '~');\n}\n\n/** getByKeyPath() utility */\nfunction getByKeyPath (obj, keyPath) {\n    if (keyPath === '') return obj;\n    const period = keyPath.indexOf('.');\n    if (period > -1) {\n        const innerObj = obj[unescapeKeyPathComponent(keyPath.substr(0, period))];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return obj[unescapeKeyPathComponent(keyPath)];\n}\n\n// We keep these two functions minimized so if using two instances of this\n//   library, where one is minimized and one is not, it will still work\nfunction Undefined(){} // eslint-disable-line space-before-function-paren, space-before-blocks\n// With ES6 classes, we may be able to simply use `class TypesonPromise extends Promise` and add a string tag for detection\nfunction TypesonPromise(f){this.p=new Promise(f)} // eslint-disable-line block-spacing, space-before-function-paren, space-before-blocks, space-infix-ops, semi\n\nTypesonPromise.prototype.then = function (onFulfilled, onRejected) {\n    return new TypesonPromise((typesonResolve, typesonReject) => {\n        this.p.then(function (res) {\n            typesonResolve(onFulfilled ? onFulfilled(res) : res);\n        }, (r) => {\n            this.p['catch'](function (res) {\n                return onRejected ? onRejected(res) : Promise.reject(res);\n            }).then(typesonResolve, typesonReject);\n        });\n    });\n};\nTypesonPromise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n};\nTypesonPromise.resolve = function (v) {\n    return new TypesonPromise((typesonResolve) => {\n        typesonResolve(v);\n    });\n};\nTypesonPromise.reject = function (v) {\n    return new TypesonPromise((typesonResolve, typesonReject) => {\n        typesonReject(v);\n    });\n};\n['all', 'race'].map(function (meth) {\n    TypesonPromise[meth] = function (promArr) {\n        return new TypesonPromise(function (typesonResolve, typesonReject) {\n            Promise[meth](promArr.map((prom) => { return prom.p; })).then(typesonResolve, typesonReject);\n        });\n    };\n});\n\n// The following provide classes meant to avoid clashes with other values\nTypeson.Undefined = Undefined; // To insist `undefined` should be added\nTypeson.Promise = TypesonPromise; // To support async encapsulation/stringification\n\n// Some fundamental type-checking utilities\nTypeson.isThenable = isThenable;\nTypeson.toStringTag = toStringTag;\nTypeson.hasConstructorOf = hasConstructorOf;\nTypeson.isObject = isObject;\nTypeson.isPlainObject = isPlainObject;\nTypeson.isUserObject = isUserObject;\n\nTypeson.escapeKeyPathComponent = escapeKeyPathComponent;\nTypeson.unescapeKeyPathComponent = unescapeKeyPathComponent;\nTypeson.getByKeyPath = getByKeyPath;\nTypeson.getJSONType = (value) =>\n    value === null ? 'null' : (\n        isArray(value)\n            ? 'array'\n            : typeof value);\nTypeson.JSON_TYPES = [\n    'null', 'boolean', 'number', 'string', 'array', 'object'\n];\n\nexport default Typeson;\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2017 Brett Zamir, 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = function (arraybuffer, byteOffset, length) {\n    const bytes = new Uint8Array(arraybuffer, byteOffset, length),\n        len = bytes.length;\n    let base64 = '';\n\n    for (let i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = function (base64) {\n    const len = base64.length;\n\n    let bufferLength = base64.length * 0.75;\n    let p = 0;\n    let encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (let i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n","import Typeson from 'typeson';\n\nexport default {\n    userObject: {\n        test (x, stateObj) { return Typeson.isUserObject(x); },\n        replace (n) { return Object.assign({}, n); },\n        revive (s) { return s; }\n    }\n};\n","export default [\n    {\n        sparseArrays: {\n            testPlainObjects: true,\n            test (x) { return Array.isArray(x); },\n            replace (a, stateObj) {\n                stateObj.iterateUnsetNumeric = true;\n                return a;\n            }\n        }\n    },\n    {\n        sparseUndefined: {\n            test (x, stateObj) {\n                return typeof x === 'undefined' && stateObj.ownKeys === false;\n            },\n            replace (n) { return null; },\n            revive (s) { return undefined; } // Will avoid adding anything\n        }\n    }\n];\n","// This does not preserve `undefined` in sparse arrays; see the `undefined` or `sparse-undefined` preset\nimport Typeson from 'typeson';\n\nexport default {\n    undef: {\n        test (x, stateObj) {\n            return typeof x === 'undefined' &&\n                (stateObj.ownKeys || !('ownKeys' in stateObj));\n        },\n        replace (n) { return null; },\n        revive (s) { return new Typeson.Undefined(); } // Will add `undefined` (returning `undefined` would instead avoid explicitly setting)\n    }\n};\n","// This module is for objectified primitives (such as `new Number(3)` or\n//      `new String(\"foo\")`)\n/* eslint-disable no-new-wrappers */\nimport Typeson from 'typeson';\nexport default {\n    // String Object (not primitive string which need no type spec)\n    StringObject: {\n        test (x) { return Typeson.toStringTag(x) === 'String' && typeof x === 'object'; },\n        replace (s) { return String(s); }, // convert to primitive string\n        revive (s) { return new String(s); } // Revive to an objectified string\n    },\n    // Boolean Object (not primitive boolean which need no type spec)\n    BooleanObject: {\n        test (x) { return Typeson.toStringTag(x) === 'Boolean' && typeof x === 'object'; },\n        replace (b) { return Boolean(b); }, // convert to primitive boolean\n        revive (b) { return new Boolean(b); } // Revive to an objectified Boolean\n    },\n    // Number Object (not primitive number which need no type spec)\n    NumberObject: {\n        test (x) { return Typeson.toStringTag(x) === 'Number' && typeof x === 'object'; },\n        replace (n) { return Number(n); }, // convert to primitive number\n        revive (n) { return new Number(n); } // Revive to an objectified number\n    }\n};\n/* eslint-enable no-new-wrappers */\n","export default {\n    nan: {\n        test (x) { return typeof x === 'number' && isNaN(x); },\n        replace (n) { return 'NaN'; },\n        revive (s) { return NaN; }\n    }\n};\n","export default {\n    infinity: {\n        test (x) { return x === Infinity; },\n        replace (n) { return 'Infinity'; },\n        revive (s) { return Infinity; }\n    }\n};\n","export default {\n    negativeInfinity: {\n        test (x) { return x === -Infinity; },\n        replace (n) { return '-Infinity'; },\n        revive (s) { return -Infinity; }\n    }\n};\n","import Typeson from 'typeson';\nexport default {\n    date: {\n        test (x) { return Typeson.toStringTag(x) === 'Date'; },\n        replace (date) {\n            const time = date.getTime();\n            if (isNaN(time)) {\n                return 'NaN';\n            }\n            return time;\n        },\n        revive (time) {\n            if (time === 'NaN') {\n                return new Date(NaN);\n            }\n            return new Date(time);\n        }\n    }\n};\n","import Typeson from 'typeson';\nexport default {\n    regexp: {\n        test (x) { return Typeson.toStringTag(x) === 'RegExp'; },\n        replace (rexp) {\n            return {\n                source: rexp.source,\n                flags: (rexp.global ? 'g' : '') +\n                    (rexp.ignoreCase ? 'i' : '') +\n                    (rexp.multiline ? 'm' : '') +\n                    (rexp.sticky ? 'y' : '') +\n                    (rexp.unicode ? 'u' : '')\n            };\n        },\n        revive ({source, flags}) { return new RegExp(source, flags); }\n    }\n};\n","import Typeson from 'typeson';\nexport default {\n    map: {\n        test (x) { return Typeson.toStringTag(x) === 'Map'; },\n        replace (map) { return Array.from(map.entries()); },\n        revive (entries) { return new Map(entries); }\n    }\n};\n","import Typeson from 'typeson';\nexport default {\n    set: {\n        test (x) { return Typeson.toStringTag(x) === 'Set'; },\n        replace (set) { return Array.from(set.values()); },\n        revive (values) { return new Set(values); }\n    }\n};\n","import Typeson from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\nexport default {\n    arraybuffer: {\n        test (x) { return Typeson.toStringTag(x) === 'ArrayBuffer'; },\n        replace (b, stateObj) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const index = stateObj.buffers.indexOf(b);\n            if (index > -1) {\n                return {index};\n            }\n            stateObj.buffers.push(b);\n            return encode(b);\n        },\n        revive (b64, stateObj) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            if (typeof b64 === 'object') {\n                return stateObj.buffers[b64.index];\n            }\n            const buffer = decode(b64);\n            stateObj.buffers.push(buffer);\n            return buffer;\n        }\n    }\n};\n\n// See also typed-arrays!\n","/* eslint-env browser, node */\nimport Typeson from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\nconst _global = typeof self === 'undefined' ? global : self;\n\nconst exportObj = {};\n[\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array'\n].forEach(function (typeName) {\n    const arrType = typeName;\n    const TypedArray = _global[arrType];\n    if (TypedArray) {\n        exportObj[typeName.toLowerCase()] = {\n            test (x) { return Typeson.toStringTag(x) === arrType; },\n            replace ({buffer, byteOffset, length}, stateObj) {\n                if (!stateObj.buffers) {\n                    stateObj.buffers = [];\n                }\n                const index = stateObj.buffers.indexOf(buffer);\n                if (index > -1) {\n                    return {index, byteOffset, length};\n                }\n                stateObj.buffers.push(buffer);\n                return {\n                    encoded: encode(buffer),\n                    byteOffset,\n                    length\n                };\n            },\n            revive (b64Obj, stateObj) {\n                if (!stateObj.buffers) {\n                    stateObj.buffers = [];\n                }\n                const {byteOffset, length, encoded, index} = b64Obj;\n                let buffer;\n                if ('index' in b64Obj) {\n                    buffer = stateObj.buffers[index];\n                } else {\n                    buffer = decode(encoded);\n                    stateObj.buffers.push(buffer);\n                }\n                return new TypedArray(buffer, byteOffset, length);\n            }\n        };\n    }\n});\n\nexport default exportObj;\n","import Typeson from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\nexport default {\n    dataview: {\n        test (x) { return Typeson.toStringTag(x) === 'DataView'; },\n        replace ({buffer, byteOffset, byteLength}, stateObj) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const index = stateObj.buffers.indexOf(buffer);\n            if (index > -1) {\n                return {index, byteOffset, byteLength};\n            }\n            stateObj.buffers.push(buffer);\n            return {\n                encoded: encode(buffer),\n                byteOffset,\n                byteLength\n            };\n        },\n        revive (b64Obj, stateObj) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const {byteOffset, byteLength, encoded, index} = b64Obj;\n            let buffer;\n            if ('index' in b64Obj) {\n                buffer = stateObj.buffers[index];\n            } else {\n                buffer = decode(encoded);\n                stateObj.buffers.push(buffer);\n            }\n            return new DataView(buffer, byteOffset, byteLength);\n        }\n    }\n};\n","import Typeson from 'typeson';\n\nconst IntlCollator = {\n    test (x) { return Typeson.hasConstructorOf(x, Intl.Collator); },\n    replace (c) { return c.resolvedOptions(); },\n    revive (options) { return new Intl.Collator(options.locale, options); }\n};\n\nconst IntlDateTimeFormat = {\n    test (x) { return Typeson.hasConstructorOf(x, Intl.DateTimeFormat); },\n    replace (dtf) { return dtf.resolvedOptions(); },\n    revive (options) { return new Intl.DateTimeFormat(options.locale, options); }\n};\n\nconst IntlNumberFormat = {\n    test (x) { return Typeson.hasConstructorOf(x, Intl.NumberFormat); },\n    replace (nf) { return nf.resolvedOptions(); },\n    revive (options) { return new Intl.NumberFormat(options.locale, options); }\n};\n\nexport default {\n    IntlCollator,\n    IntlDateTimeFormat,\n    IntlNumberFormat\n};\n","function arraybuffer2string (buf) {\n    return new Uint16Array(buf).reduce((s, byte) => s + String.fromCharCode(byte), '');\n}\n\nfunction string2arraybuffer (str) {\n    /*\n    // UTF-8 approaches\n    const utf8 = unescape(encodeURIComponent(str));\n    const arr = new Uint8Array(utf8.length);\n    for (let i = 0; i < utf8.length; i++) {\n        arr[i] = utf8.charCodeAt(i);\n    }\n    return arr.buffer;\n\n    const utf8 = [];\n    for (let i = 0; i < str.length; i++) {\n        let charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n            utf8.push(0xc0 | (charcode >> 6),\n                0x80 | (charcode & 0x3f));\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\n            utf8.push(0xe0 | (charcode >> 12),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f));\n        // surrogate pair\n        } else {\n            i++;\n            // UTF-16 encodes 0x10000-0x10FFFF by\n            // subtracting 0x10000 and splitting the\n            // 20 bits of 0x0-0xFFFFF into two halves\n            charcode = 0x10000 + (((charcode & 0x3ff) << 10) |\n                (str.charCodeAt(i) & 0x3ff));\n            utf8.push(0xf0 | (charcode >> 18),\n                0x80 | ((charcode >> 12) & 0x3f),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f));\n        }\n    }\n    return utf8;\n    */\n    /*\n    // Working UTF-16 options (equivalents)\n    const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n    const bufView = new Uint16Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n    */\n\n    const array = new Uint16Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n        array[i] = str.charCodeAt(i);\n    }\n    return array.buffer;\n}\nexport {arraybuffer2string, string2arraybuffer};\n","import Typeson from 'typeson';\n\nimport {string2arraybuffer} from '../utils/stringArrayBuffer.js';\n\nexport default {\n    file: {\n        test (x) { return Typeson.toStringTag(x) === 'File'; },\n        replace (f) { // Sync\n            const req = new XMLHttpRequest();\n            req.open('GET', URL.createObjectURL(f), false); // Sync\n            if (typeof TextEncoder !== 'undefined') { // Using TextDecoder/TextEncoder used too much space\n                req.overrideMimeType('text/plain; charset=utf-16le');\n            }\n            if (req.status !== 200 && req.status !== 0) {\n                throw new Error('Bad Blob access: ' + req.status);\n            }\n            req.send();\n            return {\n                type: f.type,\n                stringContents: req.responseText,\n                name: f.name,\n                lastModified: f.lastModified\n            };\n        },\n        revive ({name, type, stringContents, lastModified}) {\n            // stringContents = new TextEncoder().encode(stringContents);\n            const buffer = string2arraybuffer(stringContents);\n            // stringContents = new TextDecoder('utf-16le').decode(buffer);\n            return new File([buffer], name, {\n                type,\n                lastModified\n            });\n        },\n        replaceAsync (f) {\n            return new Typeson.Promise(function (resolve, reject) {\n                if (f.isClosed) { // On MDN, but not in https://w3c.github.io/FileAPI/#dfn-Blob\n                    reject(new Error('The File is closed'));\n                    return;\n                }\n                const reader = new FileReader();\n                reader.addEventListener('load', function () {\n                    resolve({\n                        type: f.type,\n                        stringContents: reader.result,\n                        name: f.name,\n                        lastModified: f.lastModified\n                    });\n                });\n                reader.addEventListener('error', function () {\n                    reject(reader.error);\n                });\n                reader.readAsText(f, 'UTF-16');\n            });\n        }\n    }\n};\n","/* This preset includes types for the Structured Cloning Algorithm. */\n\nimport userObject from '../types/user-object.js';\nimport presetUndefined from '../presets/undef.js';\nimport primitiveObjects from '../types/primitive-objects.js';\nimport specialNumbers from '../presets/special-numbers.js';\nimport date from '../types/date.js';\nimport regexp from '../types/regexp.js';\nimport map from '../types/map.js';\nimport set from '../types/set.js';\nimport arraybuffer from '../types/arraybuffer.js';\nimport typedArrays from '../types/typed-arrays.js';\nimport dataview from '../types/dataview.js';\nimport intlTypes from '../types/intl-types.js';\n\nimport imagedata from '../types/imagedata.js';\nimport imagebitmap from '../types/imagebitmap.js'; // Async return\nimport file from '../types/file.js';\nimport filelist from '../types/filelist.js';\nimport blob from '../types/blob.js';\n\nconst expObj = [\n    // Todo: Might also register synchronous `ImageBitmap` and `Blob`/`File`/`FileList`?\n    // ES5\n    userObject, // Processed last (non-builtin)\n\n    presetUndefined, primitiveObjects, specialNumbers,\n    date, regexp,\n\n    // Non-built-ins\n    imagedata,\n    imagebitmap, // Async return\n    file,\n    filelist,\n    blob\n].concat(\n    // ES2015 (ES6)\n    typeof Map === 'function' ? map : [],\n    typeof Set === 'function' ? set : [],\n    typeof ArrayBuffer === 'function' ? arraybuffer : [],\n    typeof Uint8Array === 'function' ? typedArrays : [],\n    typeof DataView === 'function' ? dataview : [],\n    typeof Intl !== 'undefined' ? intlTypes : []\n);\nexport default expObj;\n","/** ImageData is browser / DOM specific (though `node-canvas` has it available on `Canvas`).\n*/\nimport Typeson from 'typeson';\nexport default {\n    imagedata: {\n        test (x) { return Typeson.toStringTag(x) === 'ImageData'; },\n        replace (d) {\n            return {\n                array: Array.from(d.data), // Ensure `length` gets preserved for revival\n                width: d.width,\n                height: d.height\n            };\n        },\n        revive (o) {\n            return new ImageData(new Uint8ClampedArray(o.array), o.width, o.height);\n        }\n    }\n};\n","/** ImageBitmap is browser / DOM specific. It also can only work same-domain (or CORS)\n*/\nimport Typeson from 'typeson';\nexport default {\n    imagebitmap: {\n        test (x) {\n            return Typeson.toStringTag(x) === 'ImageBitmap' ||\n                // In Node, our polyfill sets the dataset on a canvas element as JSDom no longer allows overriding toStringTag\n                (x && x.dataset && x.dataset.toStringTag === 'ImageBitmap');\n        },\n        replace (bm) {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(bm, 0, 0);\n            // Although `width` and `height` are part of `ImageBitMap`, these will\n            //   be auto-created for us when reviving with the data URL (and they are\n            //   not settable even if they weren't)\n            // return {width: bm.width, height: bm.height, dataURL: canvas.toDataURL()};\n            return canvas.toDataURL();\n        },\n        revive (o) {\n            /*\n            var req = new XMLHttpRequest();\n            req.open('GET', o, false); // Sync\n            if (req.status !== 200 && req.status !== 0) throw new Error('Bad ImageBitmap access: ' + req.status);\n            req.send();\n            return req.responseText;\n            */\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const img = document.createElement('img');\n            // The onload is needed by some browsers per http://stackoverflow.com/a/4776378/271577\n            img.onload = function () {\n                ctx.drawImage(img, 0, 0);\n            };\n            img.src = o;\n            return canvas; // Works in contexts allowing an ImageBitmap (We might use `OffscreenCanvas.transferToBitmap` when supported)\n        },\n        reviveAsync (o) {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const img = document.createElement('img');\n            // The onload is needed by some browsers per http://stackoverflow.com/a/4776378/271577\n            img.onload = function () {\n                ctx.drawImage(img, 0, 0);\n            };\n            img.src = o; // o.dataURL;\n            return createImageBitmap(canvas); // Returns a promise\n        }\n    }\n};\n","import Typeson from 'typeson';\nimport file from './file.js';\nexport default {\n    file: file.file,\n    filelist: {\n        test (x) { return Typeson.toStringTag(x) === 'FileList'; },\n        replace (fl) {\n            const arr = [];\n            for (let i = 0; i < fl.length; i++) {\n                arr[i] = fl.item(i);\n            }\n            return arr;\n        },\n        revive (o) {\n            function FileList () {\n                this._files = arguments[0];\n                this.length = this._files.length;\n            }\n            FileList.prototype.item = function (index) {\n                return this._files[index];\n            };\n            FileList.prototype[Symbol.toStringTag] = 'FileList';\n            return new FileList(o);\n        }\n    }\n};\n","import Typeson from 'typeson';\n\nimport {string2arraybuffer} from '../utils/stringArrayBuffer.js';\n\nexport default {\n    blob: {\n        test (x) { return Typeson.toStringTag(x) === 'Blob'; },\n        replace (b) { // Sync\n            const req = new XMLHttpRequest();\n            req.open('GET', URL.createObjectURL(b), false); // Sync\n            if (typeof TextEncoder !== 'undefined') { // Using TextDecoder/TextEncoder used too much space\n                req.overrideMimeType('text/plain; charset=utf-16le');\n            }\n            if (req.status !== 200 && req.status !== 0) {\n                throw new Error('Bad Blob access: ' + req.status);\n            }\n            req.send();\n            return {\n                type: b.type,\n                stringContents: req.responseText\n            };\n        },\n        revive ({type, stringContents}) {\n            return new Blob([string2arraybuffer(stringContents)], {type});\n        },\n        replaceAsync (b) {\n            return new Typeson.Promise((resolve, reject) => {\n                if (b.isClosed) { // On MDN, but not in https://w3c.github.io/FileAPI/#dfn-Blob\n                    reject(new Error('The Blob is closed'));\n                    return;\n                }\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    resolve({\n                        type: b.type,\n                        stringContents: reader.result\n                    });\n                });\n                reader.addEventListener('error', () => {\n                    reject(reader.error);\n                });\n                reader.readAsText(b, 'UTF-16');\n            });\n        }\n    }\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2017 Brett Zamir, 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = function (arraybuffer, byteOffset, length) {\n    const bytes = new Uint8Array(arraybuffer, byteOffset, length),\n        len = bytes.length;\n    let base64 = '';\n\n    for (let i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = function (base64) {\n    const len = base64.length;\n\n    let bufferLength = base64.length * 0.75;\n    let p = 0;\n    let encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (let i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n","declare var global;\n\n/* eslint-env browser, node */\nimport Typeson from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\nconst _global = typeof self === 'undefined' ? global : self;\n\nconst exportObj = {};\n[\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array'\n].forEach(function (typeName) {\n    const arrType = typeName;\n    const TypedArray = _global[arrType];\n    if (TypedArray) {\n        exportObj[typeName.toLowerCase()+\"2\"] = {\n            test (x) { return Typeson.toStringTag(x) === arrType; },\n            replace ({buffer, byteOffset, length}) {\n                return {\n                    buffer,\n                    byteOffset,\n                    length\n                };\n            },\n            revive (b64Obj) {\n                const {buffer, byteOffset, length} = b64Obj;\n                return new TypedArray(buffer, byteOffset, length);\n            }\n        };\n    }\n});\n\nexport default exportObj;\n","import Typeson from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\nexport default {\n    arraybuffer: {\n        test (x) { return Typeson.toStringTag(x) === 'ArrayBuffer'; },\n        replace (b) {\n            return encode(b, 0, b.byteLength);\n        },\n        revive (b64) {\n            const buffer = decode(b64);\n            return buffer;\n        }\n    }\n};\n\n// See also typed-arrays!\n","import Typeson from 'typeson';\nimport StructuredCloning from 'typeson-registry/dist/presets/structured-cloning';\nimport { encode as encodeB64, decode as decodeB64 } from 'base64-arraybuffer-es6';\nimport Dexie from 'dexie';\nimport { readBlobSync, readBlobAsync } from './helpers';\nimport typedArray from './tson-typed-array';\nimport arrayBuffer from './tson-arraybuffer';\n\nexport const TSON = new Typeson().register(StructuredCloning);\n\nconst readBlobsSynchronously = 'FileReaderSync' in self; // true in workers only.\n\nlet blobsToAwait: any[] = [];\nlet blobsToAwaitPos = 0;\n\n// Need to patch encapsulateAsync as it does not work as of typeson 5.8.2\n// Also, current version of typespn-registry-1.0.0-alpha.21 does not\n// encapsulate/revive Blobs correctly (fails one of the unit tests in\n// this library (test 'export-format'))\nTSON.register([\n  arrayBuffer,\n  typedArray, {\n    blob2: {\n      test(x) { return Typeson.toStringTag(x) === 'Blob'; },\n      replace(b) {\n          if (b.isClosed) { // On MDN, but not in https://w3c.github.io/FileAPI/#dfn-Blob\n            throw new Error('The Blob is closed');\n          }\n          if (readBlobsSynchronously) {\n            const data = readBlobSync(b, 'binary');\n            const base64 = encodeB64(data, 0, data.byteLength);\n            return {\n              type: b.type,\n              data: base64\n            }\n          } else {\n            blobsToAwait.push(b); // This will also make TSON.mustFinalize() return true.\n            const result = {\n              type: b.type,\n              data: {start: blobsToAwaitPos, end: blobsToAwaitPos + b.size}\n            }\n            console.log(\"b.size: \" + b.size);\n            blobsToAwaitPos += b.size;\n            return result;\n          }\n      },\n      finalize(b, ba: ArrayBuffer) {\n        b.data = encodeB64(ba, 0, ba.byteLength);\n      },\n      revive ({type, data}) {\n        return new Blob([decodeB64(data)], {type});\n      }\n    }\n  }\n]);\n\nTSON.mustFinalize = ()=>blobsToAwait.length > 0;\n\nTSON.finalize = async (items?: any[]) => {\n  const allChunks = await readBlobAsync(new Blob(blobsToAwait), 'binary');\n  if (items) {\n    for (const item of items) {\n      // Manually go through all \"blob\" types in the result\n      // and lookup the data slice they point at.\n      if (item.$types) {\n        let types = item.$types;\n        const arrayType = types.$;\n        if (arrayType) types = types.$;\n        for (let keyPath in types) {\n          const typeName = types[keyPath];\n          const typeSpec = TSON.types[typeName];\n          if (typeSpec && typeSpec.finalize) {\n            const b = Dexie.getByKeyPath(item, arrayType ? \"$.\" + keyPath : keyPath);\n            typeSpec.finalize(b, allChunks.slice(b.start, b.end));\n          }\n        }\n      }\n    }\n  }\n  // Free up memory\n  blobsToAwait = [];\n}\n","\nimport Dexie from 'dexie';\nimport { getSchemaString, extractDbSchema } from './helpers';\nimport { DexieExportedTable, DexieExportJsonStructure } from './json-structure';\nimport { TSON } from './tson';\n\nexport interface ExportOptions {\n  noTransaction?: boolean;\n  numRowsPerChunk?: number;\n  prettyJson?: boolean;\n  filter?: (table: string, value: any, key?: any) => boolean;\n  progressCallback?: (progress: ExportProgress) => boolean;\n}\n\nexport interface ExportProgress {\n  totalTables: number;\n  completedTables: number;\n  totalRows: number | undefined;\n  completedRows: number;\n  done: boolean;\n}\n\nconst DEFAULT_ROWS_PER_CHUNK = 2000;\n\nexport async function exportDB(db: Dexie, options?: ExportOptions): Promise<Blob> {\n  options = options || {};\n  const slices: (string | Blob)[] = [];\n  const tables = db.tables.map(table => ({\n    name: table.name,\n    schema: getSchemaString(table),\n    rowCount: 0\n  }));\n  const {prettyJson} = options!;\n  const emptyExport: DexieExportJsonStructure = {\n    formatName: \"dexie\",\n    formatVersion: 1,\n    data: {\n      databaseName: db.name,\n      databaseVersion: db.verno,\n      tables: tables,\n      data: []\n    }\n  };\n  \n  const {progressCallback} = options!;\n  const progress: ExportProgress = {\n    done: false,\n    completedRows: 0,\n    completedTables: 0,\n    totalRows: NaN,\n    totalTables: db.tables.length\n  };\n\n  try {\n    if (options!.noTransaction) {\n      await exportAll();\n    } else {\n      await db.transaction('r', db.tables, exportAll);\n    }\n  } finally {\n    TSON.finalize(); // Free up mem if error has occurred\n  }\n\n  if (progressCallback) {\n    // Keep ongoing transaction private\n    Dexie.ignoreTransaction(()=>progressCallback(progress));\n  }\n  return new Blob(slices,{type: \"text/json\"});\n\n  async function exportAll() {\n    // Count rows:\n    const tablesRowCounts = await Promise.all(db.tables.map(table => table.count()));\n    tablesRowCounts.forEach((rowCount, i) => tables[i].rowCount = rowCount);\n    progress.totalRows = tablesRowCounts.reduce((p,c)=>p+c);\n\n    // Write first JSON slice\n    const emptyExportJson = JSON.stringify(emptyExport, undefined, prettyJson ? 2 : undefined);\n    const posEndDataArray = emptyExportJson.lastIndexOf(']');\n    const firstJsonSlice = emptyExportJson.substring(0, posEndDataArray);\n    slices.push(firstJsonSlice);\n\n    const filter = options!.filter;\n\n    for (const {name: tableName} of tables) {\n      const table = db.table(tableName);\n      const {primKey} = table.schema;\n      const inbound = !!primKey.keyPath;\n      const LIMIT = options!.numRowsPerChunk || DEFAULT_ROWS_PER_CHUNK;\n      const emptyTableExport: DexieExportedTable = inbound ? {\n        tableName: table.name,\n        inbound: true,\n        rows: []\n      } : {\n        tableName: table.name,\n        inbound: false,\n        rows: []\n      };\n      let emptyTableExportJson = JSON.stringify(emptyTableExport, undefined, prettyJson ? 2 : undefined);\n      if (prettyJson) {\n        // Increase indentation according to this:\n        // {\n        //   ...\n        //   data: [\n        //     ...\n        //     data: [\n        // 123456<---- here\n        //     ] \n        //   ]\n        // }\n        emptyTableExportJson = emptyTableExportJson.split('\\n').join('\\n    ');\n      }\n      const posEndRowsArray = emptyTableExportJson.lastIndexOf(']');\n      slices.push(emptyTableExportJson.substring(0, posEndRowsArray));\n      let lastKey: any = null;\n      let lastNumRows = 0;\n      let mayHaveMoreRows = true;\n      while (mayHaveMoreRows) {\n        if (progressCallback) {\n          // Keep ongoing transaction private\n          Dexie.ignoreTransaction(()=>progressCallback(progress));\n        }\n        const chunkedCollection = lastKey == null ?\n          table.limit(LIMIT) :\n          table.where(':id').above(lastKey).limit(LIMIT);\n\n        const values = await chunkedCollection.toArray();\n\n        if (values.length === 0) break;\n\n        if (lastKey != null && lastNumRows > 0) {\n          // Not initial chunk. Must add a comma:\n          slices.push(\",\");\n          if (prettyJson) {\n            slices.push(\"\\n      \");\n          }\n        }\n\n        mayHaveMoreRows = values.length === LIMIT;\n        \n        if (inbound) {\n          const filteredValues = filter ?\n            values.filter(value => filter(tableName, value)) :\n            values;\n\n          const tsonValues = filteredValues.map(value => TSON.encapsulate(value));\n          if (TSON.mustFinalize()) {\n            await Dexie.waitFor(TSON.finalize(tsonValues));\n          }\n\n          let json = JSON.stringify(tsonValues, undefined, prettyJson ? 2 : undefined);\n          if (prettyJson) json = json.split('\\n').join('\\n      ');\n\n          // By generating a blob here, we give web platform the opportunity to store the contents\n          // on disk and release RAM.\n          slices.push(new Blob([json.substring(1, json.length - 1)]));\n          lastNumRows = filteredValues.length;\n          lastKey = values.length > 0 ?\n            Dexie.getByKeyPath(values[values.length -1], primKey.keyPath as string) :\n            null;\n        } else {\n          const keys = await chunkedCollection.primaryKeys();\n          let keyvals = keys.map((key, i) => [key, values[i]]);\n          if (filter) keyvals = keyvals.filter(([key, value]) => filter(tableName, value, key));\n\n          const tsonTuples = keyvals.map(tuple => TSON.encapsulate(tuple));\n          if (TSON.mustFinalize()) {\n            await Dexie.waitFor(TSON.finalize(tsonTuples));\n          }\n\n          let json = JSON.stringify(tsonTuples, undefined, prettyJson ? 2 : undefined);\n          if (prettyJson) json = json.split('\\n').join('\\n      ');\n\n          // By generating a blob here, we give web platform the opportunity to store the contents\n          // on disk and release RAM.\n          slices.push(new Blob([json.substring(1, json.length - 1)]));\n          lastNumRows = keyvals.length;\n          lastKey = keys.length > 0 ?\n            keys[keys.length - 1] :\n            null;\n        }\n        progress.completedRows += values.length;\n      }\n      slices.push(emptyTableExportJson.substr(posEndRowsArray)); // \"]}\"\n      progress.completedTables += 1;\n      if (progress.completedTables < progress.totalTables) {\n        slices.push(\",\");\n      }\n    }\n    slices.push(emptyExportJson.substr(posEndDataArray));\n    progress.done = true;\n    if (progressCallback) {\n      // Keep ongoing transaction private\n      Dexie.ignoreTransaction(()=>progressCallback(progress));\n    }\n  }\n}\n","export const VERSION = 1;\n\nexport interface DexieExportJsonStructure {\n  formatName: 'dexie';\n  formatVersion: typeof VERSION;\n  data: {\n    databaseName: string;\n    databaseVersion: number;\n    tables: Array<{\n      name: string;\n      schema: string;\n      rowCount: number;\n    }>;\n    data: Array<{\n      tableName: string;\n      inbound: boolean;\n      rows: any[];\n    }>;\n  }\n}\n\nexport type DexieExportedDatabase = DexieExportJsonStructure[\"data\"];\nexport type DexieExportedTable = DexieExportedDatabase[\"data\"][number];\n","module.exports = {Stream: function(){}};\n\n",";(function (clarinet) {\n  \"use strict\";\n\n  // non node-js needs to set clarinet debug on root\n  var env =(typeof process === 'object' && process.env)\n    ? process.env\n    : self;\n\n  clarinet.parser            = function (opt) { return new CParser(opt);};\n  clarinet.CParser           = CParser;\n  clarinet.CStream           = CStream;\n  clarinet.createStream      = createStream;\n  clarinet.MAX_BUFFER_LENGTH = 64 * 1024;\n  clarinet.DEBUG             = (env.CDEBUG==='debug');\n  clarinet.INFO              = (env.CDEBUG==='debug' || env.CDEBUG==='info');\n  clarinet.EVENTS            =\n    [ \"value\"\n    , \"string\"\n    , \"key\"\n    , \"openobject\"\n    , \"closeobject\"\n    , \"openarray\"\n    , \"closearray\"\n    , \"error\"\n    , \"end\"\n    , \"ready\"\n    ];\n\n  var buffers     = {\n        textNode: undefined,\n        numberNode: \"\"\n    }\n    , streamWraps = clarinet.EVENTS.filter(function (ev) {\n          return ev !== \"error\" && ev !== \"end\";\n        })\n    , S           = 0\n    , Stream\n    ;\n\n  clarinet.STATE =\n    { BEGIN                             : S++\n    , VALUE                             : S++ // general stuff\n    , OPEN_OBJECT                       : S++ // {\n    , CLOSE_OBJECT                      : S++ // }\n    , OPEN_ARRAY                        : S++ // [\n    , CLOSE_ARRAY                       : S++ // ]\n    , TEXT_ESCAPE                       : S++ // \\ stuff\n    , STRING                            : S++ // \"\"\n    , BACKSLASH                         : S++\n    , END                               : S++ // No more stack\n    , OPEN_KEY                          : S++ // , \"a\"\n    , CLOSE_KEY                         : S++ // :\n    , TRUE                              : S++ // r\n    , TRUE2                             : S++ // u\n    , TRUE3                             : S++ // e\n    , FALSE                             : S++ // a\n    , FALSE2                            : S++ // l\n    , FALSE3                            : S++ // s\n    , FALSE4                            : S++ // e\n    , NULL                              : S++ // u\n    , NULL2                             : S++ // l\n    , NULL3                             : S++ // l\n    , NUMBER_DECIMAL_POINT              : S++ // .\n    , NUMBER_DIGIT                      : S++ // [0-9]\n    };\n\n  for (var s_ in clarinet.STATE) clarinet.STATE[clarinet.STATE[s_]] = s_;\n\n  // switcharoo\n  S = clarinet.STATE;\n\n  const Char = {\n    tab                 : 0x09,     // \\t\n    lineFeed            : 0x0A,     // \\n\n    carriageReturn      : 0x0D,     // \\r\n    space               : 0x20,     // \" \"\n\n    doubleQuote         : 0x22,     // \"\n    plus                : 0x2B,     // +\n    comma               : 0x2C,     // ,\n    minus               : 0x2D,     // -\n    period              : 0x2E,     // .\n\n    _0                  : 0x30,     // 0\n    _9                  : 0x39,     // 9\n\n    colon               : 0x3A,     // :\n\n    E                   : 0x45,     // E\n\n    openBracket         : 0x5B,     // [\n    backslash           : 0x5C,     // \\\n    closeBracket        : 0x5D,     // ]\n\n    a                   : 0x61,     // a\n    b                   : 0x62,     // b\n    e                   : 0x65,     // e \n    f                   : 0x66,     // f\n    l                   : 0x6C,     // l\n    n                   : 0x6E,     // n\n    r                   : 0x72,     // r\n    s                   : 0x73,     // s\n    t                   : 0x74,     // t\n    u                   : 0x75,     // u\n\n    openBrace           : 0x7B,     // {\n    closeBrace          : 0x7D,     // }\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function f () { this[\"__proto__\"] = o; }\n      f.prototype = o;\n      return new f;\n    };\n  }\n\n  if (!Object.getPrototypeOf) {\n    Object.getPrototypeOf = function (o) {\n      return o[\"__proto__\"];\n    };\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = [];\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i);\n      return a;\n    };\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(clarinet.MAX_BUFFER_LENGTH, 10)\n      , maxActual = 0\n      ;\n    for (var buffer in buffers) {\n      var len = parser[buffer] === undefined ? 0 : parser[buffer].length;\n      if (len > maxAllowed) {\n        switch (buffer) {\n          case \"text\":\n            closeText(parser);\n          break;\n\n          default:\n            error(parser, \"Max buffer length exceeded: \"+ buffer);\n        }\n      }\n      maxActual = Math.max(maxActual, len);\n    }\n    parser.bufferCheckPosition = (clarinet.MAX_BUFFER_LENGTH - maxActual)\n                               + parser.position;\n  }\n\n  function clearBuffers (parser) {\n    for (var buffer in buffers) {\n      parser[buffer] = buffers[buffer];\n    }\n  }\n\n  var stringTokenPattern = /[\\\\\"\\n]/g;\n\n  function CParser (opt) {\n    if (!(this instanceof CParser)) return new CParser (opt);\n\n    var parser = this;\n    clearBuffers(parser);\n    parser.bufferCheckPosition = clarinet.MAX_BUFFER_LENGTH;\n    parser.q        = parser.c = parser.p = \"\";\n    parser.opt      = opt || {};\n    parser.closed   = parser.closedRoot = parser.sawRoot = false;\n    parser.tag      = parser.error = null;\n    parser.state    = S.BEGIN;\n    parser.stack    = new Array();\n    // mostly just for error reporting\n    parser.position = parser.column = 0;\n    parser.line     = 1;\n    parser.slashed  = false;\n    parser.unicodeI = 0;\n    parser.unicodeS = null;\n    parser.depth    = 0;\n    emit(parser, \"onready\");\n  }\n\n  CParser.prototype =\n    { end    : function () { end(this); }\n    , write  : write\n    , resume : function () { this.error = null; return this; }\n    , close  : function () { return this.write(null); }\n    };\n\n  try        { Stream = require(\"stream\").Stream; }\n  catch (ex) { Stream = function () {}; }\n\n  function createStream (opt) { return new CStream(opt); }\n\n  function CStream (opt) {\n    if (!(this instanceof CStream)) return new CStream(opt);\n\n    this._parser = new CParser(opt);\n    this.writable = true;\n    this.readable = true;\n\n    //var Buffer = this.Buffer || function Buffer () {}; // if we don't have Buffers, fake it so we can do `var instanceof Buffer` and not throw an error\n    this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n    this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n    this.temp_buffs = { \"2\": new Buffer(2), \"3\": new Buffer(3), \"4\": new Buffer(4) }; // for rebuilding chars split before boundary is reached\n    this.string = '';\n\n    var me = this;\n    Stream.apply(me);\n\n    this._parser.onend = function () { me.emit(\"end\"); };\n    this._parser.onerror = function (er) {\n      me.emit(\"error\", er);\n      me._parser.error = null;\n    };\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, \"on\" + ev,\n        { get          : function () { return me._parser[\"on\" + ev]; }\n        , set          : function (h) {\n            if (!h) {\n              me.removeAllListeners(ev);\n              me._parser[\"on\"+ev] = h;\n              return h;\n            }\n            me.on(ev, h);\n          }\n        , enumerable   : true\n        , configurable : false\n        });\n    });\n  }\n\n  CStream.prototype = Object.create(Stream.prototype,\n    { constructor: { value: CStream } });\n\n  CStream.prototype.write = function (data) {\n    data = new Buffer(data);\n    for (var i = 0; i < data.length; i++) {\n      var n = data[i];\n\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = data[j];\n        }\n        this.string = this.temp_buffs[this.bytes_in_sequence].toString();\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n\n        // move iterator forward by number of byte read during sequencing\n        i = i + j - 1;\n\n        // pass data to parser and move forward to parse rest of data\n        this._parser.write(this.string);\n        this.emit(\"data\", this.string);\n        continue;\n      }\n\n      // if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n      if (this.bytes_remaining === 0 && n >= 128) {\n        if ((n >= 194) && (n <= 223)) this.bytes_in_sequence = 2;\n        if ((n >= 224) && (n <= 239)) this.bytes_in_sequence = 3;\n        if ((n >= 240) && (n <= 244)) this.bytes_in_sequence = 4;\n        if ((this.bytes_in_sequence + i) > data.length) { // if bytes needed to complete char fall outside data length, we have a boundary split\n\n          for (var k = 0; k <= (data.length - 1 - i); k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = data[i + k]; // fill temp data of correct size with bytes available in this chunk\n          }\n          this.bytes_remaining = (i + this.bytes_in_sequence) - data.length;\n\n          // immediately return as we need another chunk to sequence the character\n          return true;\n        } else {\n          this.string = data.slice(i, (i + this.bytes_in_sequence)).toString();\n          i = i + this.bytes_in_sequence - 1;\n\n          this._parser.write(this.string);\n          this.emit(\"data\", this.string);\n          continue;\n        }\n      }\n\n      // is there a range of characters that are immediately parsable?\n      for (var p = i; p < data.length; p++) {\n        if (data[p] >= 128) break;\n      }\n      this.string = data.slice(i, p).toString();\n      this._parser.write(this.string);\n      this.emit(\"data\", this.string);\n      i = p - 1;\n\n      // handle any remaining characters using multibyte logic\n      continue;\n    }\n  };\n\n  CStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) this._parser.write(chunk.toString());\n    this._parser.end();\n    return true;\n  };\n\n  CStream.prototype.on = function (ev, handler) {\n    var me = this;\n    if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser[\"on\"+ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]]\n                 : Array.apply(null, arguments);\n        args.splice(0, 0, ev);\n        me.emit.apply(me, args);\n      };\n    }\n    return Stream.prototype.on.call(me, ev, handler);\n  };\n\n  CStream.prototype.destroy = function () {\n    clearBuffers(this._parser);\n    this.emit(\"close\");\n  };\n\n  function emit(parser, event, data) {\n    if(clarinet.INFO) console.log('-- emit', event, data);\n    if (parser[event]) parser[event](data);\n  }\n\n  function emitNode(parser, event, data) {\n    closeValue(parser);\n    emit(parser, event, data);\n  }\n\n  function closeValue(parser, event) {\n    parser.textNode = textopts(parser.opt, parser.textNode);\n    if (parser.textNode !== undefined) {\n      emit(parser, (event ? event : \"onvalue\"), parser.textNode);\n    }\n    parser.textNode = undefined;\n  }\n\n  function closeNumber(parser) {\n    if (parser.numberNode)\n      emit(parser, \"onvalue\", parseFloat(parser.numberNode));\n    parser.numberNode = \"\";\n  }\n\n  function textopts (opt, text) {\n    if (text === undefined) {\n      return text;\n    }\n    if (opt.trim) text = text.trim();\n    if (opt.normalize) text = text.replace(/\\s+/g, \" \");\n    return text;\n  }\n\n  function error (parser, er) {\n    closeValue(parser);\n    er += \"\\nLine: \"+parser.line+\n          \"\\nColumn: \"+parser.column+\n          \"\\nChar: \"+parser.c;\n    er = new Error(er);\n    parser.error = er;\n    emit(parser, \"onerror\", er);\n    return parser;\n  }\n\n  function end(parser) {\n    if (parser.state !== S.VALUE || parser.depth !== 0)\n      error(parser, \"Unexpected end\");\n\n    closeValue(parser);\n    parser.c      = \"\";\n    parser.closed = true;\n    emit(parser, \"onend\");\n    CParser.call(parser, parser.opt);\n    return parser;\n  }\n\n  function isWhitespace(c) {\n    return c === Char.carriageReturn || c === Char.lineFeed || c === Char.space || c === Char.tab;\n  }\n\n  function write (chunk) {\n    var parser = this;\n    if (this.error) throw this.error;\n    if (parser.closed) return error(parser,\n      \"Cannot write after close. Assign an onready handler.\");\n    if (chunk === null) return end(parser);\n    var i = 0, c = chunk.charCodeAt(0), p = parser.p;\n    if (clarinet.DEBUG) console.log('write -> [' + chunk + ']');\n    while (c) {\n      p = c;\n      parser.c = c = chunk.charCodeAt(i++);\n      // if chunk doesnt have next, like streaming char by char\n      // this way we need to check if previous is really previous\n      // if not we need to reset to what the parser says is the previous\n      // from buffer\n      if(p !== c ) parser.p = p;\n      else p = parser.p;\n\n      if(!c) break;\n\n      if (clarinet.DEBUG) console.log(i,c,clarinet.STATE[parser.state]);\n      parser.position ++;\n      if (c === Char.lineFeed) {\n        parser.line ++;\n        parser.column = 0;\n      } else parser.column ++;\n      switch (parser.state) {\n\n        case S.BEGIN:\n          if (c === Char.openBrace) parser.state = S.OPEN_OBJECT;\n          else if (c === Char.openBracket) parser.state = S.OPEN_ARRAY;\n          else if (!isWhitespace(c))\n            error(parser, \"Non-whitespace before {[.\");\n        continue;\n\n        case S.OPEN_KEY:\n        case S.OPEN_OBJECT:\n          if (isWhitespace(c)) continue;\n          if(parser.state === S.OPEN_KEY) parser.stack.push(S.CLOSE_KEY);\n          else {\n            if(c === Char.closeBrace) {\n              emit(parser, 'onopenobject');\n              this.depth++;\n              emit(parser, 'oncloseobject');\n              this.depth--;\n              parser.state = parser.stack.pop() || S.VALUE;\n              continue;\n            } else  parser.stack.push(S.CLOSE_OBJECT);\n          }\n          if(c === Char.doubleQuote) parser.state = S.STRING;\n          else error(parser, \"Malformed object key should start with \\\"\");\n        continue;\n\n        case S.CLOSE_KEY:\n        case S.CLOSE_OBJECT:\n          if (isWhitespace(c)) continue;\n          var event = (parser.state === S.CLOSE_KEY) ? 'key' : 'object';\n          if(c === Char.colon) {\n            if(parser.state === S.CLOSE_OBJECT) {\n              parser.stack.push(S.CLOSE_OBJECT);\n              closeValue(parser, 'onopenobject');\n               this.depth++;\n            } else closeValue(parser, 'onkey');\n            parser.state  = S.VALUE;\n          } else if (c === Char.closeBrace) {\n            emitNode(parser, 'oncloseobject');\n            this.depth--;\n            parser.state = parser.stack.pop() || S.VALUE;\n          } else if(c === Char.comma) {\n            if(parser.state === S.CLOSE_OBJECT)\n              parser.stack.push(S.CLOSE_OBJECT);\n            closeValue(parser);\n            parser.state  = S.OPEN_KEY;\n          } else error(parser, 'Bad object');\n        continue;\n\n        case S.OPEN_ARRAY: // after an array there always a value\n        case S.VALUE:\n          if (isWhitespace(c)) continue;\n          if(parser.state===S.OPEN_ARRAY) {\n            emit(parser, 'onopenarray');\n            this.depth++;\n            parser.state = S.VALUE;\n            if(c === Char.closeBracket) {\n              emit(parser, 'onclosearray');\n              this.depth--;\n              parser.state = parser.stack.pop() || S.VALUE;\n              continue;\n            } else {\n              parser.stack.push(S.CLOSE_ARRAY);\n            }\n          }\n               if(c === Char.doubleQuote) parser.state = S.STRING;\n          else if(c === Char.openBrace) parser.state = S.OPEN_OBJECT;\n          else if(c === Char.openBracket) parser.state = S.OPEN_ARRAY;\n          else if(c === Char.t) parser.state = S.TRUE;\n          else if(c === Char.f) parser.state = S.FALSE;\n          else if(c === Char.n) parser.state = S.NULL;\n          else if(c === Char.minus) { // keep and continue\n            parser.numberNode += \"-\";\n          } else if(Char._0 <= c && c <= Char._9) {\n            parser.numberNode += String.fromCharCode(c);\n            parser.state = S.NUMBER_DIGIT;\n          } else               error(parser, \"Bad value\");\n        continue;\n\n        case S.CLOSE_ARRAY:\n          if(c === Char.comma) {\n            parser.stack.push(S.CLOSE_ARRAY);\n            closeValue(parser, 'onvalue');\n            parser.state  = S.VALUE;\n          } else if (c === Char.closeBracket) {\n            emitNode(parser, 'onclosearray');\n            this.depth--;\n            parser.state = parser.stack.pop() || S.VALUE;\n          } else if (isWhitespace(c))\n              continue;\n          else error(parser, 'Bad array');\n        continue;\n\n        case S.STRING:\n          if (parser.textNode === undefined) {\n            parser.textNode = \"\";\n          }\n\n          // thanks thejh, this is an about 50% performance improvement.\n          var starti              = i-1\n            , slashed = parser.slashed\n            , unicodeI = parser.unicodeI\n            ;\n          STRING_BIGLOOP: while (true) {\n            if (clarinet.DEBUG)\n              console.log(i,c,clarinet.STATE[parser.state]\n                         ,slashed);\n            // zero means \"no unicode active\". 1-4 mean \"parse some more\". end after 4.\n            while (unicodeI > 0) {\n              parser.unicodeS += String.fromCharCode(c);\n              c = chunk.charCodeAt(i++);\n              parser.position++;\n              if (unicodeI === 4) {\n                // TODO this might be slow? well, probably not used too often anyway\n                parser.textNode += String.fromCharCode(parseInt(parser.unicodeS, 16));\n                unicodeI = 0;\n                starti = i-1;\n              } else {\n                unicodeI++;\n              }\n              // we can just break here: no stuff we skipped that still has to be sliced out or so\n              if (!c) break STRING_BIGLOOP;\n            }\n            if (c === Char.doubleQuote && !slashed) {\n              parser.state = parser.stack.pop() || S.VALUE;\n              parser.textNode += chunk.substring(starti, i-1);\n              parser.position += i - 1 - starti;\n              break;\n            }\n            if (c === Char.backslash && !slashed) {\n              slashed = true;\n              parser.textNode += chunk.substring(starti, i-1);\n              parser.position += i - 1 - starti;\n              c = chunk.charCodeAt(i++);\n              parser.position++;\n              if (!c) break;\n            }\n            if (slashed) {\n              slashed = false;\n                   if (c === Char.n) { parser.textNode += '\\n'; }\n              else if (c === Char.r) { parser.textNode += '\\r'; }\n              else if (c === Char.t) { parser.textNode += '\\t'; }\n              else if (c === Char.f) { parser.textNode += '\\f'; }\n              else if (c === Char.b) { parser.textNode += '\\b'; }\n              else if (c === Char.u) {\n                // \\uxxxx. meh!\n                unicodeI = 1;\n                parser.unicodeS = '';\n              } else {\n                parser.textNode += String.fromCharCode(c);\n              }\n              c = chunk.charCodeAt(i++);\n              parser.position++;\n              starti = i-1;\n              if (!c) break;\n              else continue;\n            }\n\n            stringTokenPattern.lastIndex = i;\n            var reResult = stringTokenPattern.exec(chunk);\n            if (reResult === null) {\n              i = chunk.length+1;\n              parser.textNode += chunk.substring(starti, i-1);\n              parser.position += i - 1 - starti;\n              break;\n            }\n            i = reResult.index+1;\n            c = chunk.charCodeAt(reResult.index);\n            if (!c) {\n              parser.textNode += chunk.substring(starti, i-1);\n              parser.position += i - 1 - starti;\n              break;\n            }\n          }\n          parser.slashed = slashed;\n          parser.unicodeI = unicodeI;\n        continue;\n\n        case S.TRUE:\n          if (c === Char.r) parser.state = S.TRUE2;\n          else error(parser, 'Invalid true started with t'+ c);\n        continue;\n\n        case S.TRUE2:\n          if (c === Char.u) parser.state = S.TRUE3;\n          else error(parser, 'Invalid true started with tr'+ c);\n        continue;\n\n        case S.TRUE3:\n          if(c === Char.e) {\n            emit(parser, \"onvalue\", true);\n            parser.state = parser.stack.pop() || S.VALUE;\n          } else error(parser, 'Invalid true started with tru'+ c);\n        continue;\n\n        case S.FALSE:\n          if (c === Char.a) parser.state = S.FALSE2;\n          else error(parser, 'Invalid false started with f'+ c);\n        continue;\n\n        case S.FALSE2:\n          if (c === Char.l) parser.state = S.FALSE3;\n          else error(parser, 'Invalid false started with fa'+ c);\n        continue;\n\n        case S.FALSE3:\n          if (c === Char.s) parser.state = S.FALSE4;\n          else error(parser, 'Invalid false started with fal'+ c);\n        continue;\n\n        case S.FALSE4:\n          if (c === Char.e) {\n            emit(parser, \"onvalue\", false);\n            parser.state = parser.stack.pop() || S.VALUE;\n          } else error(parser, 'Invalid false started with fals'+ c);\n        continue;\n\n        case S.NULL:\n          if (c === Char.u) parser.state = S.NULL2;\n          else error(parser, 'Invalid null started with n'+ c);\n        continue;\n\n        case S.NULL2:\n          if (c === Char.l) parser.state = S.NULL3;\n          else error(parser, 'Invalid null started with nu'+ c);\n        continue;\n\n        case S.NULL3:\n          if(c === Char.l) {\n            emit(parser, \"onvalue\", null);\n            parser.state = parser.stack.pop() || S.VALUE;\n          } else error(parser, 'Invalid null started with nul'+ c);\n        continue;\n\n        case S.NUMBER_DECIMAL_POINT:\n          if(c === Char.period) {\n            parser.numberNode += \".\";\n            parser.state       = S.NUMBER_DIGIT;\n          } else error(parser, 'Leading zero not followed by .');\n        continue;\n\n        case S.NUMBER_DIGIT:\n          if(Char._0 <= c && c <= Char._9) parser.numberNode += String.fromCharCode(c);\n          else if (c === Char.period) {\n            if(parser.numberNode.indexOf('.')!==-1)\n              error(parser, 'Invalid number has two dots');\n            parser.numberNode += \".\";\n          } else if (c === Char.e || c === Char.E) {\n            if(parser.numberNode.indexOf('e')!==-1 ||\n               parser.numberNode.indexOf('E')!==-1 )\n               error(parser, 'Invalid number has two exponential');\n            parser.numberNode += \"e\";\n          } else if (c === Char.plus || c === Char.minus) {\n            if(!(p === Char.e || p === Char.E))\n              error(parser, 'Invalid symbol in number');\n            parser.numberNode += String.fromCharCode(c);\n          } else {\n            closeNumber(parser);\n            i--; // go back one\n            parser.state = parser.stack.pop() || S.VALUE;\n          }\n        continue;\n\n        default:\n          error(parser, \"Unknown state: \" + parser.state);\n      }\n    }\n    if (parser.position >= parser.bufferCheckPosition)\n      checkBufferLength(parser);\n    return parser;\n  }\n\n})(typeof exports === \"undefined\" ? clarinet = {} : exports);\n","import clarinet from 'clarinet';\nimport { readBlobAsync, readBlobSync } from './helpers';\n\nexport interface JsonStream<T> {\n  pullAsync(numBytes: number): Promise<Partial<T>>;\n  pullSync(numBytes: number): Partial<T>;\n  done(): boolean;\n  eof(): boolean;\n  result: Partial<T>;\n}\n\nexport function JsonStream<T>(blob: Blob):  JsonStream<T> {\n  let pos = 0;\n  const parser = JsonParser(true);\n\n  const rv = {\n    async pullAsync(numBytes: number): Promise<Partial<T>> {\n      const slize = blob.slice(pos, pos + numBytes);\n      pos += numBytes;\n      const jsonPart = await readBlobAsync(slize, 'text');\n      const result = parser.write(jsonPart);\n      rv.result = result || {};\n      return result;\n    },\n    pullSync(numBytes: number): Partial<T> {\n      const slize = blob.slice(pos, pos + numBytes);\n      pos += numBytes;\n      const jsonPart = readBlobSync(slize, 'text');\n      const result = parser.write(jsonPart);\n      rv.result = result || {};\n      return result;\n    },\n    done() {\n      return parser.done();\n    },\n    eof() {\n      return pos >= blob.size;\n    },\n    result: {}\n  }\n\n  return rv;\n}\n\n\nexport function JsonParser (allowPartial: boolean) {\n  const parser = (clarinet as any).parser();\n  let level = 0;\n  let result: any;\n  const stack: any[][] = [];\n  let obj: any;\n  let key: string | null;\n  let done = false;\n  let array = false;\n\n  parser.onopenobject = newKey => {\n    const newObj = {};\n    (newObj as any).incomplete = true;\n    if (!result) result = newObj;\n    if (obj) {\n      stack.push([key,obj,array])\n      if (allowPartial) {\n        if (array) {\n          obj.push(newObj);\n        } else {\n          obj[key!] = newObj;\n        }\n      }\n    }\n    obj = newObj;\n    key = newKey;\n    array = false;\n    ++level;\n  }\n  parser.onkey = newKey => key = newKey;\n  parser.onvalue = value => array ? obj.push(value) : obj[key!] = value;\n  parser.oncloseobject = ()=>{\n    delete obj.incomplete;\n    key = null;\n    if (--level === 0) {\n      done = true;\n    } else {\n      const completedObj = obj;\n      [key, obj, array] = stack.pop()!;\n      if (!allowPartial) {\n        if (array) {\n          obj.push(completedObj);\n        } else {\n          obj[key!] = completedObj;\n        }\n      }\n    }\n  }\n  parser.onopenarray = () => {\n    const newObj = [];\n    (newObj as any).incomplete = true;\n    if (!result) result = newObj;\n    if (obj) {\n      stack.push([key,obj,array])\n      if (allowPartial) {\n        if (array) {\n          obj.push(newObj);\n        } else {\n          obj[key!] = newObj;\n        }\n      }\n    }\n    obj = newObj;\n    array = true;\n    key = null;\n    ++level;\n  }\n  parser.onclosearray = () => {\n    delete obj.incomplete;\n    key = null;\n    if (--level === 0) {\n      done = true;\n    } else {\n      const completedObj = obj;\n      [key, obj, array] = stack.pop()!;\n      if (!allowPartial) {\n        if (array) {\n          obj.push(completedObj);\n        } else {\n          obj[key!] = completedObj;\n        }\n      }\n    }\n  }\n\n  return {\n    write(jsonPart: string) {\n      parser.write(jsonPart);\n      return result;\n    },\n    done() {\n      return done;\n    }\n  }\n}\n","import Dexie from 'dexie';\nimport { extractDbSchema } from './helpers';\nimport { DexieExportJsonStructure, VERSION } from './json-structure';\nimport { TSON } from './tson';\nimport { JsonStream } from './json-stream';\n\nexport interface StaticImportOptions {\n  noTransaction?: boolean;\n  chunkSizeBytes?: number; // Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )\n  filter?: (table: string, value: any, key?: any) => boolean;\n  progressCallback?: (progress: ImportProgress) => boolean;\n}\n\nexport interface ImportOptions extends StaticImportOptions {\n  acceptMissingTables?: boolean;\n  acceptVersionDiff?: boolean;\n  acceptNameDiff?: boolean;\n  acceptChangedPrimaryKey?: boolean;\n  overwriteValues?: boolean;\n  clearTablesBeforeImport?: boolean;\n  noTransaction?: boolean;\n  chunkSizeBytes?: number; // Default: DEFAULT_KILOBYTES_PER_CHUNK ( 1MB )\n  filter?: (table: string, value: any, key?: any) => boolean;\n  progressCallback?: (progress: ImportProgress) => boolean;\n}\n\nconst DEFAULT_KILOBYTES_PER_CHUNK = 1024;\n\nexport interface ImportProgress {\n  totalTables: number;\n  completedTables: number;\n  totalRows: number | undefined;\n  completedRows: number;\n  done: boolean;\n}\n\nexport async function importDB(exportedData: Blob | JsonStream<DexieExportJsonStructure>, options?: StaticImportOptions): Promise<Dexie> {\n  options = options || {}; // All booleans defaults to false.\n  const CHUNK_SIZE = options!.chunkSizeBytes || (DEFAULT_KILOBYTES_PER_CHUNK * 1024);\n  const stream = await loadUntilWeGotEnoughData(exportedData, CHUNK_SIZE);\n  const dbExport = stream.result.data!;\n  const db = new Dexie(dbExport.databaseName);\n  db.version(dbExport.databaseVersion).stores(extractDbSchema(dbExport));\n  await importInto(db, stream, options);\n  return db;\n}\n\nexport async function importInto(db: Dexie, exportedData: Blob | JsonStream<DexieExportJsonStructure>, options?: ImportOptions): Promise<void> {\n  options = options || {}; // All booleans defaults to false.\n  const CHUNK_SIZE = options!.chunkSizeBytes || (DEFAULT_KILOBYTES_PER_CHUNK * 1024);\n  const jsonStream = await loadUntilWeGotEnoughData(exportedData, CHUNK_SIZE);\n  let dbExportFile = jsonStream.result;\n  const readBlobsSynchronously = 'FileReaderSync' in self; // true in workers only.\n\n  const dbExport = dbExportFile.data!;\n\n  if (!options!.acceptNameDiff && db.name !== dbExport.databaseName)\n    throw new Error(`Name differs. Current database name is ${db.name} but export is ${dbExport.databaseName}`);\n  if (!options!.acceptVersionDiff && db.verno !== dbExport.databaseVersion) {\n    // Possible feature: Call upgraders in some isolated way if this happens... ?\n    throw new Error(`Database version differs. Current database is in version ${db.verno} but export is ${dbExport.databaseVersion}`);\n  }\n  \n  const { progressCallback } = options;\n  const progress: ImportProgress = {\n    done: false,\n    completedRows: 0,\n    completedTables: 0,\n    totalRows: dbExport.tables.reduce((p, c) => p + c.rowCount, 0),\n    totalTables: dbExport.tables.length\n  };\n  if (progressCallback) {\n    // Keep ongoing transaction private\n    Dexie.ignoreTransaction(()=>progressCallback(progress));\n  }\n\n  if (options.noTransaction) {\n    await importAll();\n  } else {\n    await db.transaction('rw', db.tables, importAll);\n  }  \n\n  async function importAll () {\n    do {\n      for (const tableExport of dbExport.data) {\n        if (!tableExport.rows) break; // Need to pull more!\n        if (!(tableExport.rows as any).incomplete && tableExport.rows.length === 0)\n          continue;\n\n        if (progressCallback) {\n          // Keep ongoing transaction private\n          Dexie.ignoreTransaction(()=>progressCallback(progress));\n        }\n        const tableName = tableExport.tableName;\n        const table = db.table(tableName);\n        const tableSchemaStr = dbExport.tables.filter(t => t.name === tableName)[0].schema;\n        if (!table) {\n          if (!options!.acceptMissingTables)\n            throw new Error(`Exported table ${tableExport.tableName} is missing in installed database`);\n          else\n            continue;\n        }\n        if (!options!.acceptChangedPrimaryKey &&\n          tableSchemaStr.split(',')[0] != table.schema.primKey.src) {\n          throw new Error(`Primary key differs for table ${tableExport.tableName}. `);\n        }\n\n        const sourceRows = tableExport.rows\n        \n        // Our rows may be partial, so we need to ensure each one is completed before using it\n        const rows: any[] = [];\n        for(let i = 0; i < sourceRows.length; i++) {\n          const obj = sourceRows[i];\n          if (!obj.incomplete) {\n            rows.push(TSON.revive(obj));\n          } else {\n            break;\n          }\n        }\n\n        const filter = options!.filter;\n        const filteredRows = filter ?\n          tableExport.inbound ?\n            rows.filter(value => filter(tableName, value)) :\n            rows.filter(([key, value]) => filter(tableName, value, key)) :\n          rows;\n        const [keys, values] = tableExport.inbound ?\n          [undefined, filteredRows] :\n          [filteredRows.map(row=>row[0]), rows.map(row=>row[1])];\n\n        if (options!.clearTablesBeforeImport) {\n          await table.clear();\n        }\n        if (options!.overwriteValues)\n          await table.bulkPut(values, keys);\n        else\n          await table.bulkAdd(values, keys);\n          \n        progress.completedRows += rows.length;\n        if (!(rows as any).incomplete) {\n          progress.completedTables += 1;\n        }\n        sourceRows.splice(0, rows.length); // Free up RAM, keep existing array instance.\n      }\n\n      // Avoid unnescessary loops in \"for (const tableExport of dbExport.data)\" \n      while (dbExport.data.length > 0 && dbExport.data[0].rows && !(dbExport.data[0].rows as any).incomplete) {\n        // We've already imported all rows from the first table. Delete its occurrence\n        dbExport.data.splice(0, 1); \n      }\n      if (!jsonStream.done() && !jsonStream.eof()) {\n        // Pull some more (keeping transaction alive)\n        if (readBlobsSynchronously) {\n          // If we can pull from blob synchronically, we don't have to\n          // keep transaction alive using Dexie.waitFor().\n          // This will only be possible in workers.\n          jsonStream.pullSync(CHUNK_SIZE);\n        } else {\n          await Dexie.waitFor(jsonStream.pullAsync(CHUNK_SIZE));\n        }\n      } else break;\n    } while (true)\n  }\n  progress.done = true;\n  if (progressCallback) {\n    // Keep ongoing transaction private\n    Dexie.ignoreTransaction(()=>progressCallback(progress));\n  }\n}\n\nasync function loadUntilWeGotEnoughData(exportedData: Blob | JsonStream<DexieExportJsonStructure>, CHUNK_SIZE: number): Promise<JsonStream<DexieExportJsonStructure>> {\n  const stream = ('slice' in exportedData ?\n    JsonStream<DexieExportJsonStructure>(exportedData) :\n    exportedData);\n\n  while (!stream.eof()) {\n    await stream.pullAsync(CHUNK_SIZE);\n\n    if (stream.result.data && stream.result.data!.data)\n      break;\n  }\n  const dbExportFile = stream.result;\n  if (!dbExportFile || dbExportFile.formatName != \"dexie\")\n    throw new Error(`Given file is not a dexie export`);\n  if (dbExportFile.formatVersion! > VERSION) {\n    throw new Error(`Format version ${dbExportFile.formatVersion} not supported`);\n  }\n  if (!dbExportFile.data!) {\n    throw new Error(`No data in export file`);\n  }\n  if (!dbExportFile.data!.databaseName) {\n    throw new Error(`Missing databaseName in export file`);\n  }\n  if (!dbExportFile.data!.databaseVersion) {\n    throw new Error(`Missing databaseVersion in export file`);\n  }\n  if (!dbExportFile.data!.tables) {\n    throw new Error(`Missing tables in export file`);\n  }\n  return stream;  \n}\n","import Dexie from 'dexie';\nimport { ExportOptions, exportDB } from './export';\nimport { importDB, ImportOptions, importInto, StaticImportOptions } from './import';\n\nexport { exportDB, ExportOptions};\nexport { importDB, importInto, ImportOptions};\n\n//\n// Extend Dexie interface (typescript-wise)\n//\ndeclare module 'dexie' {\n  // Extend methods on db\n  interface Dexie {\n    export(options?: ExportOptions): Promise<Blob>;\n    import(blob: Blob, options?: ImportOptions): Promise<void>;\n  }\n  interface DexieConstructor {\n    import(blob: Blob, options?: StaticImportOptions): Promise<Dexie>;\n  }\n}\n\n//\n// Extend Dexie interface (runtime wise)\n//\n\nDexie.prototype.export = function (this: Dexie, options?: ExportOptions) {\n  return exportDB(this, options);\n};\nDexie.prototype.import = function (this: Dexie, blob: Blob, options?: ImportOptions) {\n  return importInto(this, blob, options);\n};\nDexie.import = (blob: Blob, options?: StaticImportOptions) => importDB(blob, options);\n\nexport default ()=>{\n  throw new Error(\"This addon extends Dexie.prototype globally and does not have be included in Dexie constructor's addons options.\")\n};\n"],"names":["this","keys","Object","isArray","Array","toString","getProto","getPrototypeOf","hasOwn","hasOwnProperty","fnToString","internalStateObjPropsToIgnore","isThenable","v","catchCheck","Typeson","isObject","then","catch","toStringTag","val","call","slice","hasConstructorOf","a","b","proto","Ctor","constructor","isPlainObject","options","plainObjectReplacers","nonplainObjectReplacers","revivers","regTypes","types","stringify","obj","replacer","space","opts","assign","stringification","encapsulated","encapsulate","JSON","res","stringifySync","throwOnBadSyncType","sync","stringifyAsync","parse","text","reviver","revive","parseSync","parseAsync","specialTypeNames","stateObj","returnTypeNames","rootTypeName","iterateNone","refObjs","cyclic","encapsulateObserver","ret","_encapsulate","promisesDataRoot","finish","typeNames","values","length","getJSONType","Set","$types","$","TypeError","Promise","resolve","checkPromises","promisesData","all","map","pd","p","promResults","promResult","newPromisesData","prData","splice","keyPath","parentObj","key","detectedType","encaps","isTypesonPromise","TypesonPromise","encaps2","_adaptBuiltinStateObjectProperties","ownKeysObj","cb","vals","prop","tmp","forEach","i","keypath","value","resolvingTypesonPromise","observerData","$typeof","runObserver","type","undefined","string","boolean","number","isNaN","Infinity","replace","replaced","iterateIn","iterateUnsetNumeric","refIndex","indexOf","refKeys","push","isPlainObj","isArr","clone","ownKeys","kp","escapeKeyPathComponent","endIterateIn","end","endIterateOwn","vl","endIterateUnsetNumeric","plainObject","replacers","test","existing","concat","replaceAsync","replacing","typeDetected","encapsulateSync","encapsulateAsync","ignore$Types","keyPathResolutions","_revive","target","Undefined","getByKeyPath","substr","reduce","Error","reviveAsync","reviveSync","register","typeSpecSets","R","typeSpec","typeId","JSON_TYPES","includes","spec","testPlainObjects","existingReplacer","filter","r","Class","x","create","prototype","replacerObj","bind","start","fallback","reviverObj","t","s","k","keyPathComponent","unescapeKeyPathComponent","period","innerObj","f","onFulfilled","onRejected","typesonResolve","typesonReject","reject","meth","promArr","prom","isUserObject","n","String","Boolean","Number","NaN","date","time","getTime","Date","rexp","source","global","ignoreCase","multiline","sticky","unicode","flags","RegExp","from","entries","Map","set","chars","lookup","Uint8Array","charCodeAt","encode","arraybuffer","byteOffset","bytes","len","base64","substring","decode","bufferLength","encoded1","encoded2","encoded3","encoded4","ArrayBuffer","buffers","index","b64","buffer","_global","self","exportObj","typeName","arrType","TypedArray","toLowerCase","b64Obj","encoded","byteLength","DataView","Intl","Collator","c","resolvedOptions","locale","DateTimeFormat","dtf","NumberFormat","nf","string2arraybuffer","str","array","Uint16Array","req","XMLHttpRequest","open","URL","createObjectURL","TextEncoder","overrideMimeType","status","send","responseText","name","lastModified","stringContents","File","isClosed","reader","FileReader","addEventListener","result","error","readAsText","userObject","presetUndefined","primitiveObjects","specialNumbers","regexp","d","data","width","height","o","ImageData","Uint8ClampedArray","dataset","bm","canvas","document","createElement","getContext","drawImage","toDataURL","ctx","img","onload","src","createImageBitmap","file","fl","arr","item","FileList","_files","arguments","Symbol","Blob","typedArrays","dataview","intlTypes","StructuredCloning","typedArray","encodeB64","decodeB64","require$$0","clarinet"],"mappings":"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"}